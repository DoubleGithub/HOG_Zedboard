-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hog is
generic (
    C_M_AXI_INPUT_IMAGE_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_INPUT_IMAGE_ID_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT_IMAGE_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT_IMAGE_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_INPUT_IMAGE_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT_IMAGE_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT_IMAGE_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_INPUT_IMAGE_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_SPECS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_SPECS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_INPUT_IMAGE_PROT_VALUE : INTEGER := 0;
    C_M_AXI_INPUT_IMAGE_USER_VALUE : INTEGER := 0;
    C_M_AXI_INPUT_IMAGE_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_AWVALID : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_AWREADY : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ADDR_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ID_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_INPUT_IMAGE_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_INPUT_IMAGE_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_INPUT_IMAGE_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_AWUSER_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_WVALID : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_WREADY : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_DATA_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_DATA_WIDTH/8-1 downto 0);
    m_axi_INPUT_IMAGE_WLAST : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ID_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_WUSER_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_ARVALID : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_ARREADY : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ADDR_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ID_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_INPUT_IMAGE_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_INPUT_IMAGE_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_INPUT_IMAGE_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_INPUT_IMAGE_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ARUSER_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_RVALID : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_RREADY : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_DATA_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_RLAST : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_RID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ID_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_RUSER_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_BVALID : IN STD_LOGIC;
    m_axi_INPUT_IMAGE_BREADY : OUT STD_LOGIC;
    m_axi_INPUT_IMAGE_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_INPUT_IMAGE_BID : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_ID_WIDTH-1 downto 0);
    m_axi_INPUT_IMAGE_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_INPUT_IMAGE_BUSER_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_SPECS_AWVALID : IN STD_LOGIC;
    s_axi_SPECS_AWREADY : OUT STD_LOGIC;
    s_axi_SPECS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_SPECS_ADDR_WIDTH-1 downto 0);
    s_axi_SPECS_WVALID : IN STD_LOGIC;
    s_axi_SPECS_WREADY : OUT STD_LOGIC;
    s_axi_SPECS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_SPECS_DATA_WIDTH-1 downto 0);
    s_axi_SPECS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_SPECS_DATA_WIDTH/8-1 downto 0);
    s_axi_SPECS_ARVALID : IN STD_LOGIC;
    s_axi_SPECS_ARREADY : OUT STD_LOGIC;
    s_axi_SPECS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_SPECS_ADDR_WIDTH-1 downto 0);
    s_axi_SPECS_RVALID : OUT STD_LOGIC;
    s_axi_SPECS_RREADY : IN STD_LOGIC;
    s_axi_SPECS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_SPECS_DATA_WIDTH-1 downto 0);
    s_axi_SPECS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_SPECS_BVALID : OUT STD_LOGIC;
    s_axi_SPECS_BREADY : IN STD_LOGIC;
    s_axi_SPECS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of hog is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hog,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.250000,HLS_SYN_LAT=1787,HLS_SYN_TPT=none,HLS_SYN_MEM=22,HLS_SYN_DSP=16,HLS_SYN_FF=3859,HLS_SYN_LUT=5249}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv26_3FFFFF2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111111110010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_264 : STD_LOGIC_VECTOR (9 downto 0) := "1001100100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_22 : STD_LOGIC_VECTOR (9 downto 0) := "0000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv33_21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_48 : STD_LOGIC_VECTOR (7 downto 0) := "01001000";
    constant ap_const_lv22_788 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011110001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal specs_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal specs_ce0 : STD_LOGIC;
    signal specs_we0 : STD_LOGIC;
    signal specs_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal specs_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal image0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal weights_ce0 : STD_LOGIC;
    signal weights_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal weights_ce1 : STD_LOGIC;
    signal weights_q1 : STD_LOGIC_VECTOR (9 downto 0);
    signal INPUT_IMAGE_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal tmp_45_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_IMAGE_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal tmp_50_reg_1728 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal INPUT_IMAGE_AWREADY : STD_LOGIC;
    signal INPUT_IMAGE_WREADY : STD_LOGIC;
    signal INPUT_IMAGE_ARVALID : STD_LOGIC;
    signal INPUT_IMAGE_ARREADY : STD_LOGIC;
    signal INPUT_IMAGE_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_IMAGE_RVALID : STD_LOGIC;
    signal INPUT_IMAGE_RREADY : STD_LOGIC;
    signal INPUT_IMAGE_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal INPUT_IMAGE_RLAST : STD_LOGIC;
    signal INPUT_IMAGE_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_IMAGE_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_IMAGE_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal INPUT_IMAGE_BVALID : STD_LOGIC;
    signal INPUT_IMAGE_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal INPUT_IMAGE_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal INPUT_IMAGE_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_863 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_sig_ioackin_INPUT_IMAGE_ARREADY : STD_LOGIC;
    signal i_reg_875 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_reg_886 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten8_reg_897 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal i4_reg_909 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar1_reg_920 : STD_LOGIC_VECTOR (5 downto 0);
    signal classify_0_reg_931 : STD_LOGIC_VECTOR (25 downto 0);
    signal i_i_reg_943 : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal specs_load_reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_1073_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_cast_reg_1576 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_35_cast_fu_1077_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_35_cast_reg_1582 : STD_LOGIC_VECTOR (32 downto 0);
    signal exitcond_flatten_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1588 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1087_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next_reg_1592 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal indvar_mid2_fu_1099_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter2_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter3_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter4_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter5_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter6_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter7_indvar_mid2_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_v_fu_1113_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter8_tmp_mid2_v_v_reg_1602 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_next_fu_1121_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1164_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_reg_1615 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter12_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter13_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter14_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter15_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter16_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter17_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter18_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter19_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter20_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter21_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_sum1_cast_mid2_v_fu_1199_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_sum1_cast_mid2_v_reg_1635 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1127_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_1640 : STD_LOGIC_VECTOR (9 downto 0);
    signal INPUT_IMAGE_addr_reg_1645 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1181_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_40_reg_1655 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_cast_fu_1253_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp3_cast_reg_1660 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal exitcond_flatten1_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter1_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter2_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter3_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter4_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter5_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter6_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter7_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter8_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter9_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter10_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter11_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter12_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp1_iter13_exitcond_flatten1_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next9_fu_1263_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_next9_reg_1669 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal indvar1_mid2_fu_1275_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter1_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter2_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter3_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter4_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter5_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter6_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp1_iter7_indvar1_mid2_reg_1674 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_sum2_cast_mid2_v_v_s_fu_1289_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter1_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter2_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter3_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter4_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter5_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter6_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter7_p_sum2_cast_mid2_v_v_s_reg_1679 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_next1_fu_1297_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_43_fu_1348_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_reg_1697 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter12_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter13_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter14_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter15_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter16_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter17_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter18_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter19_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter20_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter21_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_sum2_cast_mid2_v_v_2_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_IMAGE_addr_1_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_pipeline_reg_pp1_iter14_INPUT_IMAGE_addr_1_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1303_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_49_reg_1723 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_50_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1357_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_reg_1732 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal offset_assign_cast_fu_1448_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal offset_assign_cast_reg_1742 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_normalizeHisto0_fu_1019_ap_done : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_ap_done : STD_LOGIC;
    signal tmp_i_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_pipeline_reg_pp2_iter1_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter2_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter3_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter4_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter5_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp2_iter6_tmp_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_1458_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_reg_1752 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp7_fu_1468_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_reg_1757 : STD_LOGIC_VECTOR (7 downto 0);
    signal normalized0_V_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal normalized0_V_load_reg_1782 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_pipeline_reg_pp2_iter3_normalized0_V_load_reg_1782 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_load_reg_1787 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp2_iter3_weights_load_reg_1787 : STD_LOGIC_VECTOR (9 downto 0);
    signal normalized1_V_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal normalized1_V_load_reg_1792 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_load_1_reg_1797 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1513_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_1_reg_1822 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1553_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_44_reg_1827 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal sum_fu_1528_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal descriptor0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal descriptor0_V_ce0 : STD_LOGIC;
    signal descriptor0_V_we0 : STD_LOGIC;
    signal descriptor0_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal descriptor0_V_ce1 : STD_LOGIC;
    signal descriptor0_V_we1 : STD_LOGIC;
    signal normalized0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized0_V_ce0 : STD_LOGIC;
    signal normalized0_V_ce1 : STD_LOGIC;
    signal normalized0_V_we1 : STD_LOGIC;
    signal descriptor1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal descriptor1_V_ce0 : STD_LOGIC;
    signal descriptor1_V_we0 : STD_LOGIC;
    signal descriptor1_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal descriptor1_V_ce1 : STD_LOGIC;
    signal descriptor1_V_we1 : STD_LOGIC;
    signal normalized1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized1_V_ce0 : STD_LOGIC;
    signal normalized1_V_ce1 : STD_LOGIC;
    signal normalized1_V_we1 : STD_LOGIC;
    signal image_buffer0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_0_ce0 : STD_LOGIC;
    signal image_buffer0_0_we0 : STD_LOGIC;
    signal image_buffer0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_1_ce0 : STD_LOGIC;
    signal image_buffer0_1_we0 : STD_LOGIC;
    signal image_buffer0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_1_ce1 : STD_LOGIC;
    signal image_buffer0_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_2_ce0 : STD_LOGIC;
    signal image_buffer0_2_we0 : STD_LOGIC;
    signal image_buffer0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_2_ce1 : STD_LOGIC;
    signal image_buffer0_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_3_ce0 : STD_LOGIC;
    signal image_buffer0_3_we0 : STD_LOGIC;
    signal image_buffer0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_3_ce1 : STD_LOGIC;
    signal image_buffer0_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_4_ce0 : STD_LOGIC;
    signal image_buffer0_4_we0 : STD_LOGIC;
    signal image_buffer0_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_4_ce1 : STD_LOGIC;
    signal image_buffer0_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_5_ce0 : STD_LOGIC;
    signal image_buffer0_5_we0 : STD_LOGIC;
    signal image_buffer0_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_5_ce1 : STD_LOGIC;
    signal image_buffer0_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_6_ce0 : STD_LOGIC;
    signal image_buffer0_6_we0 : STD_LOGIC;
    signal image_buffer0_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_6_ce1 : STD_LOGIC;
    signal image_buffer0_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_7_ce0 : STD_LOGIC;
    signal image_buffer0_7_we0 : STD_LOGIC;
    signal image_buffer0_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_7_ce1 : STD_LOGIC;
    signal image_buffer0_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_8_ce0 : STD_LOGIC;
    signal image_buffer0_8_we0 : STD_LOGIC;
    signal image_buffer0_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_8_ce1 : STD_LOGIC;
    signal image_buffer0_8_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_9_ce0 : STD_LOGIC;
    signal image_buffer0_9_we0 : STD_LOGIC;
    signal image_buffer0_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_9_ce1 : STD_LOGIC;
    signal image_buffer0_9_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_10_ce0 : STD_LOGIC;
    signal image_buffer0_10_we0 : STD_LOGIC;
    signal image_buffer0_10_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_10_ce1 : STD_LOGIC;
    signal image_buffer0_10_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_11_ce0 : STD_LOGIC;
    signal image_buffer0_11_we0 : STD_LOGIC;
    signal image_buffer0_11_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_11_ce1 : STD_LOGIC;
    signal image_buffer0_11_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_12_ce0 : STD_LOGIC;
    signal image_buffer0_12_we0 : STD_LOGIC;
    signal image_buffer0_12_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_12_ce1 : STD_LOGIC;
    signal image_buffer0_12_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_13_ce0 : STD_LOGIC;
    signal image_buffer0_13_we0 : STD_LOGIC;
    signal image_buffer0_13_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_13_ce1 : STD_LOGIC;
    signal image_buffer0_13_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_14_ce0 : STD_LOGIC;
    signal image_buffer0_14_we0 : STD_LOGIC;
    signal image_buffer0_14_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_14_ce1 : STD_LOGIC;
    signal image_buffer0_14_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_15_ce0 : STD_LOGIC;
    signal image_buffer0_15_we0 : STD_LOGIC;
    signal image_buffer0_15_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_15_ce1 : STD_LOGIC;
    signal image_buffer0_15_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_16_ce0 : STD_LOGIC;
    signal image_buffer0_16_we0 : STD_LOGIC;
    signal image_buffer0_16_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_16_ce1 : STD_LOGIC;
    signal image_buffer0_16_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer0_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer0_17_ce0 : STD_LOGIC;
    signal image_buffer0_17_we0 : STD_LOGIC;
    signal image_buffer0_17_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_0_ce0 : STD_LOGIC;
    signal image_buffer1_0_we0 : STD_LOGIC;
    signal image_buffer1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_1_ce0 : STD_LOGIC;
    signal image_buffer1_1_we0 : STD_LOGIC;
    signal image_buffer1_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_1_ce1 : STD_LOGIC;
    signal image_buffer1_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_2_ce0 : STD_LOGIC;
    signal image_buffer1_2_we0 : STD_LOGIC;
    signal image_buffer1_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_2_ce1 : STD_LOGIC;
    signal image_buffer1_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_3_ce0 : STD_LOGIC;
    signal image_buffer1_3_we0 : STD_LOGIC;
    signal image_buffer1_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_3_ce1 : STD_LOGIC;
    signal image_buffer1_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_4_ce0 : STD_LOGIC;
    signal image_buffer1_4_we0 : STD_LOGIC;
    signal image_buffer1_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_4_ce1 : STD_LOGIC;
    signal image_buffer1_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_5_ce0 : STD_LOGIC;
    signal image_buffer1_5_we0 : STD_LOGIC;
    signal image_buffer1_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_5_ce1 : STD_LOGIC;
    signal image_buffer1_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_6_ce0 : STD_LOGIC;
    signal image_buffer1_6_we0 : STD_LOGIC;
    signal image_buffer1_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_6_ce1 : STD_LOGIC;
    signal image_buffer1_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_7_ce0 : STD_LOGIC;
    signal image_buffer1_7_we0 : STD_LOGIC;
    signal image_buffer1_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_7_ce1 : STD_LOGIC;
    signal image_buffer1_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_8_ce0 : STD_LOGIC;
    signal image_buffer1_8_we0 : STD_LOGIC;
    signal image_buffer1_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_8_ce1 : STD_LOGIC;
    signal image_buffer1_8_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_9_ce0 : STD_LOGIC;
    signal image_buffer1_9_we0 : STD_LOGIC;
    signal image_buffer1_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_9_ce1 : STD_LOGIC;
    signal image_buffer1_9_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_10_ce0 : STD_LOGIC;
    signal image_buffer1_10_we0 : STD_LOGIC;
    signal image_buffer1_10_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_10_ce1 : STD_LOGIC;
    signal image_buffer1_10_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_11_ce0 : STD_LOGIC;
    signal image_buffer1_11_we0 : STD_LOGIC;
    signal image_buffer1_11_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_11_ce1 : STD_LOGIC;
    signal image_buffer1_11_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_12_ce0 : STD_LOGIC;
    signal image_buffer1_12_we0 : STD_LOGIC;
    signal image_buffer1_12_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_12_ce1 : STD_LOGIC;
    signal image_buffer1_12_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_13_ce0 : STD_LOGIC;
    signal image_buffer1_13_we0 : STD_LOGIC;
    signal image_buffer1_13_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_13_ce1 : STD_LOGIC;
    signal image_buffer1_13_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_14_ce0 : STD_LOGIC;
    signal image_buffer1_14_we0 : STD_LOGIC;
    signal image_buffer1_14_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_14_ce1 : STD_LOGIC;
    signal image_buffer1_14_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_15_ce0 : STD_LOGIC;
    signal image_buffer1_15_we0 : STD_LOGIC;
    signal image_buffer1_15_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_15_ce1 : STD_LOGIC;
    signal image_buffer1_15_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_16_ce0 : STD_LOGIC;
    signal image_buffer1_16_we0 : STD_LOGIC;
    signal image_buffer1_16_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_16_ce1 : STD_LOGIC;
    signal image_buffer1_16_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_buffer1_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal image_buffer1_17_ce0 : STD_LOGIC;
    signal image_buffer1_17_we0 : STD_LOGIC;
    signal image_buffer1_17_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum0_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum0_ce0 : STD_LOGIC;
    signal sum0_we0 : STD_LOGIC;
    signal sum0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum0_ce1 : STD_LOGIC;
    signal sum0_we1 : STD_LOGIC;
    signal sum1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum1_ce0 : STD_LOGIC;
    signal sum1_we0 : STD_LOGIC;
    signal sum1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum1_ce1 : STD_LOGIC;
    signal sum1_we1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_ap_start : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_ap_done : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_ap_idle : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_ap_ready : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_descriptor_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_computeHistogram0_fu_955_descriptor_V_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_descriptor_V_we0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_descriptor_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_computeHistogram0_fu_955_descriptor_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_computeHistogram0_fu_955_descriptor_V_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_descriptor_V_we1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_descriptor_V_d1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_0_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_1_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_1_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_2_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_2_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_3_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_3_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_4_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_4_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_4_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_5_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_5_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_5_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_6_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_6_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_6_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_7_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_7_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_7_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_8_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_8_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_8_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_9_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_9_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_9_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_10_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_10_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_10_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_11_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_11_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_11_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_12_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_12_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_12_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_13_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_13_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_13_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_14_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_14_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_14_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_15_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_15_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_15_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_16_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_16_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_16_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_image_buffer_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram0_fu_955_image_buffer_17_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_sum_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_computeHistogram0_fu_955_sum_ce0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_sum_we0 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_sum_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_computeHistogram0_fu_955_sum_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_computeHistogram0_fu_955_sum_ce1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_sum_we1 : STD_LOGIC;
    signal grp_computeHistogram0_fu_955_sum_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_computeHistogram1_fu_987_ap_start : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_ap_done : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_ap_idle : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_ap_ready : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_descriptor_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_computeHistogram1_fu_987_descriptor_V_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_descriptor_V_we0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_descriptor_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_computeHistogram1_fu_987_descriptor_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_computeHistogram1_fu_987_descriptor_V_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_descriptor_V_we1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_descriptor_V_d1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_0_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_1_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_1_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_2_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_2_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_3_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_3_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_4_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_4_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_4_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_5_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_5_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_5_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_6_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_6_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_6_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_7_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_7_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_7_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_8_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_8_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_8_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_9_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_9_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_9_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_10_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_10_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_10_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_11_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_11_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_11_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_12_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_12_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_12_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_13_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_13_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_13_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_14_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_14_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_14_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_15_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_15_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_15_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_16_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_16_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_16_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_16_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_image_buffer_17_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_computeHistogram1_fu_987_image_buffer_17_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_sum_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_computeHistogram1_fu_987_sum_ce0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_sum_we0 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_sum_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_computeHistogram1_fu_987_sum_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_computeHistogram1_fu_987_sum_ce1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_sum_we1 : STD_LOGIC;
    signal grp_computeHistogram1_fu_987_sum_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_normalizeHisto0_fu_1019_ap_start : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_ap_idle : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_ap_ready : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_sum_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_normalizeHisto0_fu_1019_sum_ce0 : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_descriptor_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_normalizeHisto0_fu_1019_descriptor_V_ce0 : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_normalized_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_normalizeHisto0_fu_1019_normalized_V_ce1 : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_normalized_V_we1 : STD_LOGIC;
    signal grp_normalizeHisto0_fu_1019_normalized_V_d1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_normalizeHisto1_fu_1026_ap_start : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_ap_idle : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_ap_ready : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_sum_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_normalizeHisto1_fu_1026_sum_ce0 : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_descriptor_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_normalizeHisto1_fu_1026_descriptor_V_ce0 : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_normalized_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_normalizeHisto1_fu_1026_normalized_V_ce1 : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_normalized_V_we1 : STD_LOGIC;
    signal grp_normalizeHisto1_fu_1026_normalized_V_d1 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_phi_fu_867_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_phi_fu_879_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten8_phi_fu_901_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal i4_phi_fu_913_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_i_phi_fu_947_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_grp_computeHistogram0_fu_955_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_reg_grp_computeHistogram1_fu_987_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_normalizeHisto0_fu_1019_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_normalizeHisto1_fu_1026_ap_start : STD_LOGIC := '0';
    signal tmp_41_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_i_fu_1478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_i_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_i_fu_1502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal image02_sum_cast_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal image02_sum7_cast_fu_1384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_INPUT_IMAGE_ARREADY : STD_LOGIC := '0';
    signal exitcond_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_1107_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1127_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl4_cast_mid2_v_fu_1140_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl4_cast_mid2_fu_1147_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_cast_fu_1151_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_fu_1154_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_1160_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_mid2_fu_1133_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1173_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1181_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1539_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_sum1_cast_mid2_v_v_fu_1195_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_sum1_cast_mid2_cast_fu_1204_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal image02_sum_fu_1207_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp3_fu_1248_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal exitcond1_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1283_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1303_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1312_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl6_cast_mid2_v_fu_1324_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl6_cast_mid2_fu_1331_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar1_cast_fu_1335_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp6_fu_1338_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp6_cast_fu_1344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_mid2_fu_1317_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1357_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1546_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_sum2_cast_mid2_v_v_fu_1371_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_sum2_cast_mid2_v_fu_1374_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal image02_sum7_fu_1379_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_48_fu_1426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1438_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal i_i_cast_fu_1464_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_cast9_fu_1474_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_i_fu_1484_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp7_cast_fu_1494_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_8_i_fu_1497_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_cast_cast_fu_1525_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1539_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1539_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1546_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1546_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1127_ce : STD_LOGIC;
    signal grp_fu_1173_ce : STD_LOGIC;
    signal grp_fu_1181_ce : STD_LOGIC;
    signal grp_fu_1303_ce : STD_LOGIC;
    signal grp_fu_1312_ce : STD_LOGIC;
    signal grp_fu_1357_ce : STD_LOGIC;
    signal grp_fu_1539_ce : STD_LOGIC;
    signal grp_fu_1546_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1173_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1312_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1539_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1546_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_1744 : BOOLEAN;
    signal ap_condition_1757 : BOOLEAN;

    component computeHistogram0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        descriptor_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce0 : OUT STD_LOGIC;
        descriptor_V_we0 : OUT STD_LOGIC;
        descriptor_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        descriptor_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        descriptor_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce1 : OUT STD_LOGIC;
        descriptor_V_we1 : OUT STD_LOGIC;
        descriptor_V_d1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        image_buffer_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_0_ce0 : OUT STD_LOGIC;
        image_buffer_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_1_ce0 : OUT STD_LOGIC;
        image_buffer_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_1_ce1 : OUT STD_LOGIC;
        image_buffer_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_2_ce0 : OUT STD_LOGIC;
        image_buffer_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_2_ce1 : OUT STD_LOGIC;
        image_buffer_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_3_ce0 : OUT STD_LOGIC;
        image_buffer_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_3_ce1 : OUT STD_LOGIC;
        image_buffer_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_4_ce0 : OUT STD_LOGIC;
        image_buffer_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_4_ce1 : OUT STD_LOGIC;
        image_buffer_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_5_ce0 : OUT STD_LOGIC;
        image_buffer_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_5_ce1 : OUT STD_LOGIC;
        image_buffer_5_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_6_ce0 : OUT STD_LOGIC;
        image_buffer_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_6_ce1 : OUT STD_LOGIC;
        image_buffer_6_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_7_ce0 : OUT STD_LOGIC;
        image_buffer_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_7_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_7_ce1 : OUT STD_LOGIC;
        image_buffer_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_8_ce0 : OUT STD_LOGIC;
        image_buffer_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_8_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_8_ce1 : OUT STD_LOGIC;
        image_buffer_8_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_9_ce0 : OUT STD_LOGIC;
        image_buffer_9_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_9_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_9_ce1 : OUT STD_LOGIC;
        image_buffer_9_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_10_ce0 : OUT STD_LOGIC;
        image_buffer_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_10_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_10_ce1 : OUT STD_LOGIC;
        image_buffer_10_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_11_ce0 : OUT STD_LOGIC;
        image_buffer_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_11_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_11_ce1 : OUT STD_LOGIC;
        image_buffer_11_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_12_ce0 : OUT STD_LOGIC;
        image_buffer_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_12_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_12_ce1 : OUT STD_LOGIC;
        image_buffer_12_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_13_ce0 : OUT STD_LOGIC;
        image_buffer_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_13_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_13_ce1 : OUT STD_LOGIC;
        image_buffer_13_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_14_ce0 : OUT STD_LOGIC;
        image_buffer_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_14_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_14_ce1 : OUT STD_LOGIC;
        image_buffer_14_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_15_ce0 : OUT STD_LOGIC;
        image_buffer_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_15_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_15_ce1 : OUT STD_LOGIC;
        image_buffer_15_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_16_ce0 : OUT STD_LOGIC;
        image_buffer_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_16_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_16_ce1 : OUT STD_LOGIC;
        image_buffer_16_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_17_ce0 : OUT STD_LOGIC;
        image_buffer_17_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sum_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_we0 : OUT STD_LOGIC;
        sum_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce1 : OUT STD_LOGIC;
        sum_we1 : OUT STD_LOGIC;
        sum_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component computeHistogram1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        descriptor_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce0 : OUT STD_LOGIC;
        descriptor_V_we0 : OUT STD_LOGIC;
        descriptor_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        descriptor_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        descriptor_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce1 : OUT STD_LOGIC;
        descriptor_V_we1 : OUT STD_LOGIC;
        descriptor_V_d1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        image_buffer_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_0_ce0 : OUT STD_LOGIC;
        image_buffer_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_1_ce0 : OUT STD_LOGIC;
        image_buffer_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_1_ce1 : OUT STD_LOGIC;
        image_buffer_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_2_ce0 : OUT STD_LOGIC;
        image_buffer_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_2_ce1 : OUT STD_LOGIC;
        image_buffer_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_3_ce0 : OUT STD_LOGIC;
        image_buffer_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_3_ce1 : OUT STD_LOGIC;
        image_buffer_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_4_ce0 : OUT STD_LOGIC;
        image_buffer_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_4_ce1 : OUT STD_LOGIC;
        image_buffer_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_5_ce0 : OUT STD_LOGIC;
        image_buffer_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_5_ce1 : OUT STD_LOGIC;
        image_buffer_5_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_6_ce0 : OUT STD_LOGIC;
        image_buffer_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_6_ce1 : OUT STD_LOGIC;
        image_buffer_6_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_7_ce0 : OUT STD_LOGIC;
        image_buffer_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_7_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_7_ce1 : OUT STD_LOGIC;
        image_buffer_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_8_ce0 : OUT STD_LOGIC;
        image_buffer_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_8_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_8_ce1 : OUT STD_LOGIC;
        image_buffer_8_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_9_ce0 : OUT STD_LOGIC;
        image_buffer_9_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_9_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_9_ce1 : OUT STD_LOGIC;
        image_buffer_9_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_10_ce0 : OUT STD_LOGIC;
        image_buffer_10_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_10_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_10_ce1 : OUT STD_LOGIC;
        image_buffer_10_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_11_ce0 : OUT STD_LOGIC;
        image_buffer_11_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_11_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_11_ce1 : OUT STD_LOGIC;
        image_buffer_11_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_12_ce0 : OUT STD_LOGIC;
        image_buffer_12_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_12_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_12_ce1 : OUT STD_LOGIC;
        image_buffer_12_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_13_ce0 : OUT STD_LOGIC;
        image_buffer_13_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_13_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_13_ce1 : OUT STD_LOGIC;
        image_buffer_13_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_14_ce0 : OUT STD_LOGIC;
        image_buffer_14_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_14_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_14_ce1 : OUT STD_LOGIC;
        image_buffer_14_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_15_ce0 : OUT STD_LOGIC;
        image_buffer_15_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_15_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_15_ce1 : OUT STD_LOGIC;
        image_buffer_15_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_16_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_16_ce0 : OUT STD_LOGIC;
        image_buffer_16_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_16_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_16_ce1 : OUT STD_LOGIC;
        image_buffer_16_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        image_buffer_17_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        image_buffer_17_ce0 : OUT STD_LOGIC;
        image_buffer_17_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sum_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_we0 : OUT STD_LOGIC;
        sum_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce1 : OUT STD_LOGIC;
        sum_we1 : OUT STD_LOGIC;
        sum_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component normalizeHisto0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sum_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        descriptor_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce0 : OUT STD_LOGIC;
        descriptor_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        normalized_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        normalized_V_ce1 : OUT STD_LOGIC;
        normalized_V_we1 : OUT STD_LOGIC;
        normalized_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component normalizeHisto1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sum_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        descriptor_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        descriptor_V_ce0 : OUT STD_LOGIC;
        descriptor_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        normalized_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        normalized_V_ce1 : OUT STD_LOGIC;
        normalized_V_we1 : OUT STD_LOGIC;
        normalized_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component hog_urem_10ns_7nsAem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component hog_mul_32s_5ns_3Bew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hog_mul_10s_10s_2CeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component hog_mul_mul_10ns_DeQ IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component hog_mac_muladd_10Ee0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component hog_weights IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component hog_descriptor0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component hog_normalized0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component hog_image_buffer0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hog_image_buffer0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hog_sum0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hog_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        image0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hog_SPECS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        specs_address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        specs_ce0 : IN STD_LOGIC;
        specs_we0 : IN STD_LOGIC;
        specs_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        specs_q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component hog_INPUT_IMAGE_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    weights_U : component hog_weights
    generic map (
        DataWidth => 10,
        AddressRange => 1152,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_address0,
        ce0 => weights_ce0,
        q0 => weights_q0,
        address1 => weights_address1,
        ce1 => weights_ce1,
        q1 => weights_q1);

    hog_CONTROL_BUS_s_axi_U : component hog_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        image0 => image0);

    hog_SPECS_s_axi_U : component hog_SPECS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_SPECS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_SPECS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_SPECS_AWVALID,
        AWREADY => s_axi_SPECS_AWREADY,
        AWADDR => s_axi_SPECS_AWADDR,
        WVALID => s_axi_SPECS_WVALID,
        WREADY => s_axi_SPECS_WREADY,
        WDATA => s_axi_SPECS_WDATA,
        WSTRB => s_axi_SPECS_WSTRB,
        ARVALID => s_axi_SPECS_ARVALID,
        ARREADY => s_axi_SPECS_ARREADY,
        ARADDR => s_axi_SPECS_ARADDR,
        RVALID => s_axi_SPECS_RVALID,
        RREADY => s_axi_SPECS_RREADY,
        RDATA => s_axi_SPECS_RDATA,
        RRESP => s_axi_SPECS_RRESP,
        BVALID => s_axi_SPECS_BVALID,
        BREADY => s_axi_SPECS_BREADY,
        BRESP => s_axi_SPECS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        specs_address0 => specs_address0,
        specs_ce0 => specs_ce0,
        specs_we0 => specs_we0,
        specs_d0 => specs_d0,
        specs_q0 => specs_q0);

    hog_INPUT_IMAGE_m_axi_U : component hog_INPUT_IMAGE_m_axi
    generic map (
        USER_DW => 8,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_INPUT_IMAGE_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_INPUT_IMAGE_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_INPUT_IMAGE_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_INPUT_IMAGE_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_INPUT_IMAGE_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_INPUT_IMAGE_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_INPUT_IMAGE_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_INPUT_IMAGE_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_INPUT_IMAGE_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_INPUT_IMAGE_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_INPUT_IMAGE_CACHE_VALUE)
    port map (
        AWVALID => m_axi_INPUT_IMAGE_AWVALID,
        AWREADY => m_axi_INPUT_IMAGE_AWREADY,
        AWADDR => m_axi_INPUT_IMAGE_AWADDR,
        AWID => m_axi_INPUT_IMAGE_AWID,
        AWLEN => m_axi_INPUT_IMAGE_AWLEN,
        AWSIZE => m_axi_INPUT_IMAGE_AWSIZE,
        AWBURST => m_axi_INPUT_IMAGE_AWBURST,
        AWLOCK => m_axi_INPUT_IMAGE_AWLOCK,
        AWCACHE => m_axi_INPUT_IMAGE_AWCACHE,
        AWPROT => m_axi_INPUT_IMAGE_AWPROT,
        AWQOS => m_axi_INPUT_IMAGE_AWQOS,
        AWREGION => m_axi_INPUT_IMAGE_AWREGION,
        AWUSER => m_axi_INPUT_IMAGE_AWUSER,
        WVALID => m_axi_INPUT_IMAGE_WVALID,
        WREADY => m_axi_INPUT_IMAGE_WREADY,
        WDATA => m_axi_INPUT_IMAGE_WDATA,
        WSTRB => m_axi_INPUT_IMAGE_WSTRB,
        WLAST => m_axi_INPUT_IMAGE_WLAST,
        WID => m_axi_INPUT_IMAGE_WID,
        WUSER => m_axi_INPUT_IMAGE_WUSER,
        ARVALID => m_axi_INPUT_IMAGE_ARVALID,
        ARREADY => m_axi_INPUT_IMAGE_ARREADY,
        ARADDR => m_axi_INPUT_IMAGE_ARADDR,
        ARID => m_axi_INPUT_IMAGE_ARID,
        ARLEN => m_axi_INPUT_IMAGE_ARLEN,
        ARSIZE => m_axi_INPUT_IMAGE_ARSIZE,
        ARBURST => m_axi_INPUT_IMAGE_ARBURST,
        ARLOCK => m_axi_INPUT_IMAGE_ARLOCK,
        ARCACHE => m_axi_INPUT_IMAGE_ARCACHE,
        ARPROT => m_axi_INPUT_IMAGE_ARPROT,
        ARQOS => m_axi_INPUT_IMAGE_ARQOS,
        ARREGION => m_axi_INPUT_IMAGE_ARREGION,
        ARUSER => m_axi_INPUT_IMAGE_ARUSER,
        RVALID => m_axi_INPUT_IMAGE_RVALID,
        RREADY => m_axi_INPUT_IMAGE_RREADY,
        RDATA => m_axi_INPUT_IMAGE_RDATA,
        RLAST => m_axi_INPUT_IMAGE_RLAST,
        RID => m_axi_INPUT_IMAGE_RID,
        RUSER => m_axi_INPUT_IMAGE_RUSER,
        RRESP => m_axi_INPUT_IMAGE_RRESP,
        BVALID => m_axi_INPUT_IMAGE_BVALID,
        BREADY => m_axi_INPUT_IMAGE_BREADY,
        BRESP => m_axi_INPUT_IMAGE_BRESP,
        BID => m_axi_INPUT_IMAGE_BID,
        BUSER => m_axi_INPUT_IMAGE_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => INPUT_IMAGE_ARVALID,
        I_ARREADY => INPUT_IMAGE_ARREADY,
        I_ARADDR => INPUT_IMAGE_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_22,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => INPUT_IMAGE_RVALID,
        I_RREADY => INPUT_IMAGE_RREADY,
        I_RDATA => INPUT_IMAGE_RDATA,
        I_RID => INPUT_IMAGE_RID,
        I_RUSER => INPUT_IMAGE_RUSER,
        I_RRESP => INPUT_IMAGE_RRESP,
        I_RLAST => INPUT_IMAGE_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => INPUT_IMAGE_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => INPUT_IMAGE_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => INPUT_IMAGE_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => INPUT_IMAGE_BRESP,
        I_BID => INPUT_IMAGE_BID,
        I_BUSER => INPUT_IMAGE_BUSER);

    descriptor0_V_U : component hog_descriptor0_V
    generic map (
        DataWidth => 15,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => descriptor0_V_address0,
        ce0 => descriptor0_V_ce0,
        we0 => descriptor0_V_we0,
        d0 => grp_computeHistogram0_fu_955_descriptor_V_d0,
        q0 => descriptor0_V_q0,
        address1 => grp_computeHistogram0_fu_955_descriptor_V_address1,
        ce1 => descriptor0_V_ce1,
        we1 => descriptor0_V_we1,
        d1 => grp_computeHistogram0_fu_955_descriptor_V_d1);

    normalized0_V_U : component hog_normalized0_V
    generic map (
        DataWidth => 10,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => normalized0_V_address0,
        ce0 => normalized0_V_ce0,
        q0 => normalized0_V_q0,
        address1 => grp_normalizeHisto0_fu_1019_normalized_V_address1,
        ce1 => normalized0_V_ce1,
        we1 => normalized0_V_we1,
        d1 => grp_normalizeHisto0_fu_1019_normalized_V_d1);

    descriptor1_V_U : component hog_descriptor0_V
    generic map (
        DataWidth => 15,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => descriptor1_V_address0,
        ce0 => descriptor1_V_ce0,
        we0 => descriptor1_V_we0,
        d0 => grp_computeHistogram1_fu_987_descriptor_V_d0,
        q0 => descriptor1_V_q0,
        address1 => grp_computeHistogram1_fu_987_descriptor_V_address1,
        ce1 => descriptor1_V_ce1,
        we1 => descriptor1_V_we1,
        d1 => grp_computeHistogram1_fu_987_descriptor_V_d1);

    normalized1_V_U : component hog_normalized0_V
    generic map (
        DataWidth => 10,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => normalized1_V_address0,
        ce0 => normalized1_V_ce0,
        q0 => normalized1_V_q0,
        address1 => grp_normalizeHisto1_fu_1026_normalized_V_address1,
        ce1 => normalized1_V_ce1,
        we1 => normalized1_V_we1,
        d1 => grp_normalizeHisto1_fu_1026_normalized_V_d1);

    image_buffer0_0_U : component hog_image_buffer0_0
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_0_address0,
        ce0 => image_buffer0_0_ce0,
        we0 => image_buffer0_0_we0,
        d0 => reg_1033,
        q0 => image_buffer0_0_q0);

    image_buffer0_1_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_1_address0,
        ce0 => image_buffer0_1_ce0,
        we0 => image_buffer0_1_we0,
        d0 => reg_1033,
        q0 => image_buffer0_1_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_1_address1,
        ce1 => image_buffer0_1_ce1,
        q1 => image_buffer0_1_q1);

    image_buffer0_2_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_2_address0,
        ce0 => image_buffer0_2_ce0,
        we0 => image_buffer0_2_we0,
        d0 => reg_1033,
        q0 => image_buffer0_2_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_2_address1,
        ce1 => image_buffer0_2_ce1,
        q1 => image_buffer0_2_q1);

    image_buffer0_3_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_3_address0,
        ce0 => image_buffer0_3_ce0,
        we0 => image_buffer0_3_we0,
        d0 => reg_1033,
        q0 => image_buffer0_3_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_3_address1,
        ce1 => image_buffer0_3_ce1,
        q1 => image_buffer0_3_q1);

    image_buffer0_4_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_4_address0,
        ce0 => image_buffer0_4_ce0,
        we0 => image_buffer0_4_we0,
        d0 => reg_1033,
        q0 => image_buffer0_4_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_4_address1,
        ce1 => image_buffer0_4_ce1,
        q1 => image_buffer0_4_q1);

    image_buffer0_5_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_5_address0,
        ce0 => image_buffer0_5_ce0,
        we0 => image_buffer0_5_we0,
        d0 => reg_1033,
        q0 => image_buffer0_5_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_5_address1,
        ce1 => image_buffer0_5_ce1,
        q1 => image_buffer0_5_q1);

    image_buffer0_6_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_6_address0,
        ce0 => image_buffer0_6_ce0,
        we0 => image_buffer0_6_we0,
        d0 => reg_1033,
        q0 => image_buffer0_6_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_6_address1,
        ce1 => image_buffer0_6_ce1,
        q1 => image_buffer0_6_q1);

    image_buffer0_7_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_7_address0,
        ce0 => image_buffer0_7_ce0,
        we0 => image_buffer0_7_we0,
        d0 => reg_1033,
        q0 => image_buffer0_7_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_7_address1,
        ce1 => image_buffer0_7_ce1,
        q1 => image_buffer0_7_q1);

    image_buffer0_8_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_8_address0,
        ce0 => image_buffer0_8_ce0,
        we0 => image_buffer0_8_we0,
        d0 => reg_1033,
        q0 => image_buffer0_8_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_8_address1,
        ce1 => image_buffer0_8_ce1,
        q1 => image_buffer0_8_q1);

    image_buffer0_9_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_9_address0,
        ce0 => image_buffer0_9_ce0,
        we0 => image_buffer0_9_we0,
        d0 => reg_1033,
        q0 => image_buffer0_9_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_9_address1,
        ce1 => image_buffer0_9_ce1,
        q1 => image_buffer0_9_q1);

    image_buffer0_10_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_10_address0,
        ce0 => image_buffer0_10_ce0,
        we0 => image_buffer0_10_we0,
        d0 => reg_1033,
        q0 => image_buffer0_10_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_10_address1,
        ce1 => image_buffer0_10_ce1,
        q1 => image_buffer0_10_q1);

    image_buffer0_11_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_11_address0,
        ce0 => image_buffer0_11_ce0,
        we0 => image_buffer0_11_we0,
        d0 => reg_1033,
        q0 => image_buffer0_11_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_11_address1,
        ce1 => image_buffer0_11_ce1,
        q1 => image_buffer0_11_q1);

    image_buffer0_12_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_12_address0,
        ce0 => image_buffer0_12_ce0,
        we0 => image_buffer0_12_we0,
        d0 => reg_1033,
        q0 => image_buffer0_12_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_12_address1,
        ce1 => image_buffer0_12_ce1,
        q1 => image_buffer0_12_q1);

    image_buffer0_13_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_13_address0,
        ce0 => image_buffer0_13_ce0,
        we0 => image_buffer0_13_we0,
        d0 => reg_1033,
        q0 => image_buffer0_13_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_13_address1,
        ce1 => image_buffer0_13_ce1,
        q1 => image_buffer0_13_q1);

    image_buffer0_14_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_14_address0,
        ce0 => image_buffer0_14_ce0,
        we0 => image_buffer0_14_we0,
        d0 => reg_1033,
        q0 => image_buffer0_14_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_14_address1,
        ce1 => image_buffer0_14_ce1,
        q1 => image_buffer0_14_q1);

    image_buffer0_15_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_15_address0,
        ce0 => image_buffer0_15_ce0,
        we0 => image_buffer0_15_we0,
        d0 => reg_1033,
        q0 => image_buffer0_15_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_15_address1,
        ce1 => image_buffer0_15_ce1,
        q1 => image_buffer0_15_q1);

    image_buffer0_16_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_16_address0,
        ce0 => image_buffer0_16_ce0,
        we0 => image_buffer0_16_we0,
        d0 => reg_1033,
        q0 => image_buffer0_16_q0,
        address1 => grp_computeHistogram0_fu_955_image_buffer_16_address1,
        ce1 => image_buffer0_16_ce1,
        q1 => image_buffer0_16_q1);

    image_buffer0_17_U : component hog_image_buffer0_0
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer0_17_address0,
        ce0 => image_buffer0_17_ce0,
        we0 => image_buffer0_17_we0,
        d0 => reg_1033,
        q0 => image_buffer0_17_q0);

    image_buffer1_0_U : component hog_image_buffer0_0
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_0_address0,
        ce0 => image_buffer1_0_ce0,
        we0 => image_buffer1_0_we0,
        d0 => reg_1033,
        q0 => image_buffer1_0_q0);

    image_buffer1_1_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_1_address0,
        ce0 => image_buffer1_1_ce0,
        we0 => image_buffer1_1_we0,
        d0 => reg_1033,
        q0 => image_buffer1_1_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_1_address1,
        ce1 => image_buffer1_1_ce1,
        q1 => image_buffer1_1_q1);

    image_buffer1_2_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_2_address0,
        ce0 => image_buffer1_2_ce0,
        we0 => image_buffer1_2_we0,
        d0 => reg_1033,
        q0 => image_buffer1_2_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_2_address1,
        ce1 => image_buffer1_2_ce1,
        q1 => image_buffer1_2_q1);

    image_buffer1_3_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_3_address0,
        ce0 => image_buffer1_3_ce0,
        we0 => image_buffer1_3_we0,
        d0 => reg_1033,
        q0 => image_buffer1_3_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_3_address1,
        ce1 => image_buffer1_3_ce1,
        q1 => image_buffer1_3_q1);

    image_buffer1_4_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_4_address0,
        ce0 => image_buffer1_4_ce0,
        we0 => image_buffer1_4_we0,
        d0 => reg_1033,
        q0 => image_buffer1_4_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_4_address1,
        ce1 => image_buffer1_4_ce1,
        q1 => image_buffer1_4_q1);

    image_buffer1_5_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_5_address0,
        ce0 => image_buffer1_5_ce0,
        we0 => image_buffer1_5_we0,
        d0 => reg_1033,
        q0 => image_buffer1_5_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_5_address1,
        ce1 => image_buffer1_5_ce1,
        q1 => image_buffer1_5_q1);

    image_buffer1_6_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_6_address0,
        ce0 => image_buffer1_6_ce0,
        we0 => image_buffer1_6_we0,
        d0 => reg_1033,
        q0 => image_buffer1_6_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_6_address1,
        ce1 => image_buffer1_6_ce1,
        q1 => image_buffer1_6_q1);

    image_buffer1_7_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_7_address0,
        ce0 => image_buffer1_7_ce0,
        we0 => image_buffer1_7_we0,
        d0 => reg_1033,
        q0 => image_buffer1_7_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_7_address1,
        ce1 => image_buffer1_7_ce1,
        q1 => image_buffer1_7_q1);

    image_buffer1_8_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_8_address0,
        ce0 => image_buffer1_8_ce0,
        we0 => image_buffer1_8_we0,
        d0 => reg_1033,
        q0 => image_buffer1_8_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_8_address1,
        ce1 => image_buffer1_8_ce1,
        q1 => image_buffer1_8_q1);

    image_buffer1_9_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_9_address0,
        ce0 => image_buffer1_9_ce0,
        we0 => image_buffer1_9_we0,
        d0 => reg_1033,
        q0 => image_buffer1_9_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_9_address1,
        ce1 => image_buffer1_9_ce1,
        q1 => image_buffer1_9_q1);

    image_buffer1_10_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_10_address0,
        ce0 => image_buffer1_10_ce0,
        we0 => image_buffer1_10_we0,
        d0 => reg_1033,
        q0 => image_buffer1_10_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_10_address1,
        ce1 => image_buffer1_10_ce1,
        q1 => image_buffer1_10_q1);

    image_buffer1_11_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_11_address0,
        ce0 => image_buffer1_11_ce0,
        we0 => image_buffer1_11_we0,
        d0 => reg_1033,
        q0 => image_buffer1_11_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_11_address1,
        ce1 => image_buffer1_11_ce1,
        q1 => image_buffer1_11_q1);

    image_buffer1_12_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_12_address0,
        ce0 => image_buffer1_12_ce0,
        we0 => image_buffer1_12_we0,
        d0 => reg_1033,
        q0 => image_buffer1_12_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_12_address1,
        ce1 => image_buffer1_12_ce1,
        q1 => image_buffer1_12_q1);

    image_buffer1_13_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_13_address0,
        ce0 => image_buffer1_13_ce0,
        we0 => image_buffer1_13_we0,
        d0 => reg_1033,
        q0 => image_buffer1_13_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_13_address1,
        ce1 => image_buffer1_13_ce1,
        q1 => image_buffer1_13_q1);

    image_buffer1_14_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_14_address0,
        ce0 => image_buffer1_14_ce0,
        we0 => image_buffer1_14_we0,
        d0 => reg_1033,
        q0 => image_buffer1_14_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_14_address1,
        ce1 => image_buffer1_14_ce1,
        q1 => image_buffer1_14_q1);

    image_buffer1_15_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_15_address0,
        ce0 => image_buffer1_15_ce0,
        we0 => image_buffer1_15_we0,
        d0 => reg_1033,
        q0 => image_buffer1_15_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_15_address1,
        ce1 => image_buffer1_15_ce1,
        q1 => image_buffer1_15_q1);

    image_buffer1_16_U : component hog_image_buffer0_1
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_16_address0,
        ce0 => image_buffer1_16_ce0,
        we0 => image_buffer1_16_we0,
        d0 => reg_1033,
        q0 => image_buffer1_16_q0,
        address1 => grp_computeHistogram1_fu_987_image_buffer_16_address1,
        ce1 => image_buffer1_16_ce1,
        q1 => image_buffer1_16_q1);

    image_buffer1_17_U : component hog_image_buffer0_0
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => image_buffer1_17_address0,
        ce0 => image_buffer1_17_ce0,
        we0 => image_buffer1_17_we0,
        d0 => reg_1033,
        q0 => image_buffer1_17_q0);

    sum0_U : component hog_sum0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum0_address0,
        ce0 => sum0_ce0,
        we0 => sum0_we0,
        d0 => grp_computeHistogram0_fu_955_sum_d0,
        q0 => sum0_q0,
        address1 => grp_computeHistogram0_fu_955_sum_address1,
        ce1 => sum0_ce1,
        we1 => sum0_we1,
        d1 => grp_computeHistogram0_fu_955_sum_d1);

    sum1_U : component hog_sum0
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => sum1_address0,
        ce0 => sum1_ce0,
        we0 => sum1_we0,
        d0 => grp_computeHistogram1_fu_987_sum_d0,
        q0 => sum1_q0,
        address1 => grp_computeHistogram1_fu_987_sum_address1,
        ce1 => sum1_ce1,
        we1 => sum1_we1,
        d1 => grp_computeHistogram1_fu_987_sum_d1);

    grp_computeHistogram0_fu_955 : component computeHistogram0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_computeHistogram0_fu_955_ap_start,
        ap_done => grp_computeHistogram0_fu_955_ap_done,
        ap_idle => grp_computeHistogram0_fu_955_ap_idle,
        ap_ready => grp_computeHistogram0_fu_955_ap_ready,
        descriptor_V_address0 => grp_computeHistogram0_fu_955_descriptor_V_address0,
        descriptor_V_ce0 => grp_computeHistogram0_fu_955_descriptor_V_ce0,
        descriptor_V_we0 => grp_computeHistogram0_fu_955_descriptor_V_we0,
        descriptor_V_d0 => grp_computeHistogram0_fu_955_descriptor_V_d0,
        descriptor_V_q0 => descriptor0_V_q0,
        descriptor_V_address1 => grp_computeHistogram0_fu_955_descriptor_V_address1,
        descriptor_V_ce1 => grp_computeHistogram0_fu_955_descriptor_V_ce1,
        descriptor_V_we1 => grp_computeHistogram0_fu_955_descriptor_V_we1,
        descriptor_V_d1 => grp_computeHistogram0_fu_955_descriptor_V_d1,
        image_buffer_0_address0 => grp_computeHistogram0_fu_955_image_buffer_0_address0,
        image_buffer_0_ce0 => grp_computeHistogram0_fu_955_image_buffer_0_ce0,
        image_buffer_0_q0 => image_buffer0_0_q0,
        image_buffer_1_address0 => grp_computeHistogram0_fu_955_image_buffer_1_address0,
        image_buffer_1_ce0 => grp_computeHistogram0_fu_955_image_buffer_1_ce0,
        image_buffer_1_q0 => image_buffer0_1_q0,
        image_buffer_1_address1 => grp_computeHistogram0_fu_955_image_buffer_1_address1,
        image_buffer_1_ce1 => grp_computeHistogram0_fu_955_image_buffer_1_ce1,
        image_buffer_1_q1 => image_buffer0_1_q1,
        image_buffer_2_address0 => grp_computeHistogram0_fu_955_image_buffer_2_address0,
        image_buffer_2_ce0 => grp_computeHistogram0_fu_955_image_buffer_2_ce0,
        image_buffer_2_q0 => image_buffer0_2_q0,
        image_buffer_2_address1 => grp_computeHistogram0_fu_955_image_buffer_2_address1,
        image_buffer_2_ce1 => grp_computeHistogram0_fu_955_image_buffer_2_ce1,
        image_buffer_2_q1 => image_buffer0_2_q1,
        image_buffer_3_address0 => grp_computeHistogram0_fu_955_image_buffer_3_address0,
        image_buffer_3_ce0 => grp_computeHistogram0_fu_955_image_buffer_3_ce0,
        image_buffer_3_q0 => image_buffer0_3_q0,
        image_buffer_3_address1 => grp_computeHistogram0_fu_955_image_buffer_3_address1,
        image_buffer_3_ce1 => grp_computeHistogram0_fu_955_image_buffer_3_ce1,
        image_buffer_3_q1 => image_buffer0_3_q1,
        image_buffer_4_address0 => grp_computeHistogram0_fu_955_image_buffer_4_address0,
        image_buffer_4_ce0 => grp_computeHistogram0_fu_955_image_buffer_4_ce0,
        image_buffer_4_q0 => image_buffer0_4_q0,
        image_buffer_4_address1 => grp_computeHistogram0_fu_955_image_buffer_4_address1,
        image_buffer_4_ce1 => grp_computeHistogram0_fu_955_image_buffer_4_ce1,
        image_buffer_4_q1 => image_buffer0_4_q1,
        image_buffer_5_address0 => grp_computeHistogram0_fu_955_image_buffer_5_address0,
        image_buffer_5_ce0 => grp_computeHistogram0_fu_955_image_buffer_5_ce0,
        image_buffer_5_q0 => image_buffer0_5_q0,
        image_buffer_5_address1 => grp_computeHistogram0_fu_955_image_buffer_5_address1,
        image_buffer_5_ce1 => grp_computeHistogram0_fu_955_image_buffer_5_ce1,
        image_buffer_5_q1 => image_buffer0_5_q1,
        image_buffer_6_address0 => grp_computeHistogram0_fu_955_image_buffer_6_address0,
        image_buffer_6_ce0 => grp_computeHistogram0_fu_955_image_buffer_6_ce0,
        image_buffer_6_q0 => image_buffer0_6_q0,
        image_buffer_6_address1 => grp_computeHistogram0_fu_955_image_buffer_6_address1,
        image_buffer_6_ce1 => grp_computeHistogram0_fu_955_image_buffer_6_ce1,
        image_buffer_6_q1 => image_buffer0_6_q1,
        image_buffer_7_address0 => grp_computeHistogram0_fu_955_image_buffer_7_address0,
        image_buffer_7_ce0 => grp_computeHistogram0_fu_955_image_buffer_7_ce0,
        image_buffer_7_q0 => image_buffer0_7_q0,
        image_buffer_7_address1 => grp_computeHistogram0_fu_955_image_buffer_7_address1,
        image_buffer_7_ce1 => grp_computeHistogram0_fu_955_image_buffer_7_ce1,
        image_buffer_7_q1 => image_buffer0_7_q1,
        image_buffer_8_address0 => grp_computeHistogram0_fu_955_image_buffer_8_address0,
        image_buffer_8_ce0 => grp_computeHistogram0_fu_955_image_buffer_8_ce0,
        image_buffer_8_q0 => image_buffer0_8_q0,
        image_buffer_8_address1 => grp_computeHistogram0_fu_955_image_buffer_8_address1,
        image_buffer_8_ce1 => grp_computeHistogram0_fu_955_image_buffer_8_ce1,
        image_buffer_8_q1 => image_buffer0_8_q1,
        image_buffer_9_address0 => grp_computeHistogram0_fu_955_image_buffer_9_address0,
        image_buffer_9_ce0 => grp_computeHistogram0_fu_955_image_buffer_9_ce0,
        image_buffer_9_q0 => image_buffer0_9_q0,
        image_buffer_9_address1 => grp_computeHistogram0_fu_955_image_buffer_9_address1,
        image_buffer_9_ce1 => grp_computeHistogram0_fu_955_image_buffer_9_ce1,
        image_buffer_9_q1 => image_buffer0_9_q1,
        image_buffer_10_address0 => grp_computeHistogram0_fu_955_image_buffer_10_address0,
        image_buffer_10_ce0 => grp_computeHistogram0_fu_955_image_buffer_10_ce0,
        image_buffer_10_q0 => image_buffer0_10_q0,
        image_buffer_10_address1 => grp_computeHistogram0_fu_955_image_buffer_10_address1,
        image_buffer_10_ce1 => grp_computeHistogram0_fu_955_image_buffer_10_ce1,
        image_buffer_10_q1 => image_buffer0_10_q1,
        image_buffer_11_address0 => grp_computeHistogram0_fu_955_image_buffer_11_address0,
        image_buffer_11_ce0 => grp_computeHistogram0_fu_955_image_buffer_11_ce0,
        image_buffer_11_q0 => image_buffer0_11_q0,
        image_buffer_11_address1 => grp_computeHistogram0_fu_955_image_buffer_11_address1,
        image_buffer_11_ce1 => grp_computeHistogram0_fu_955_image_buffer_11_ce1,
        image_buffer_11_q1 => image_buffer0_11_q1,
        image_buffer_12_address0 => grp_computeHistogram0_fu_955_image_buffer_12_address0,
        image_buffer_12_ce0 => grp_computeHistogram0_fu_955_image_buffer_12_ce0,
        image_buffer_12_q0 => image_buffer0_12_q0,
        image_buffer_12_address1 => grp_computeHistogram0_fu_955_image_buffer_12_address1,
        image_buffer_12_ce1 => grp_computeHistogram0_fu_955_image_buffer_12_ce1,
        image_buffer_12_q1 => image_buffer0_12_q1,
        image_buffer_13_address0 => grp_computeHistogram0_fu_955_image_buffer_13_address0,
        image_buffer_13_ce0 => grp_computeHistogram0_fu_955_image_buffer_13_ce0,
        image_buffer_13_q0 => image_buffer0_13_q0,
        image_buffer_13_address1 => grp_computeHistogram0_fu_955_image_buffer_13_address1,
        image_buffer_13_ce1 => grp_computeHistogram0_fu_955_image_buffer_13_ce1,
        image_buffer_13_q1 => image_buffer0_13_q1,
        image_buffer_14_address0 => grp_computeHistogram0_fu_955_image_buffer_14_address0,
        image_buffer_14_ce0 => grp_computeHistogram0_fu_955_image_buffer_14_ce0,
        image_buffer_14_q0 => image_buffer0_14_q0,
        image_buffer_14_address1 => grp_computeHistogram0_fu_955_image_buffer_14_address1,
        image_buffer_14_ce1 => grp_computeHistogram0_fu_955_image_buffer_14_ce1,
        image_buffer_14_q1 => image_buffer0_14_q1,
        image_buffer_15_address0 => grp_computeHistogram0_fu_955_image_buffer_15_address0,
        image_buffer_15_ce0 => grp_computeHistogram0_fu_955_image_buffer_15_ce0,
        image_buffer_15_q0 => image_buffer0_15_q0,
        image_buffer_15_address1 => grp_computeHistogram0_fu_955_image_buffer_15_address1,
        image_buffer_15_ce1 => grp_computeHistogram0_fu_955_image_buffer_15_ce1,
        image_buffer_15_q1 => image_buffer0_15_q1,
        image_buffer_16_address0 => grp_computeHistogram0_fu_955_image_buffer_16_address0,
        image_buffer_16_ce0 => grp_computeHistogram0_fu_955_image_buffer_16_ce0,
        image_buffer_16_q0 => image_buffer0_16_q0,
        image_buffer_16_address1 => grp_computeHistogram0_fu_955_image_buffer_16_address1,
        image_buffer_16_ce1 => grp_computeHistogram0_fu_955_image_buffer_16_ce1,
        image_buffer_16_q1 => image_buffer0_16_q1,
        image_buffer_17_address0 => grp_computeHistogram0_fu_955_image_buffer_17_address0,
        image_buffer_17_ce0 => grp_computeHistogram0_fu_955_image_buffer_17_ce0,
        image_buffer_17_q0 => image_buffer0_17_q0,
        sum_address0 => grp_computeHistogram0_fu_955_sum_address0,
        sum_ce0 => grp_computeHistogram0_fu_955_sum_ce0,
        sum_we0 => grp_computeHistogram0_fu_955_sum_we0,
        sum_d0 => grp_computeHistogram0_fu_955_sum_d0,
        sum_q0 => sum0_q0,
        sum_address1 => grp_computeHistogram0_fu_955_sum_address1,
        sum_ce1 => grp_computeHistogram0_fu_955_sum_ce1,
        sum_we1 => grp_computeHistogram0_fu_955_sum_we1,
        sum_d1 => grp_computeHistogram0_fu_955_sum_d1);

    grp_computeHistogram1_fu_987 : component computeHistogram1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_computeHistogram1_fu_987_ap_start,
        ap_done => grp_computeHistogram1_fu_987_ap_done,
        ap_idle => grp_computeHistogram1_fu_987_ap_idle,
        ap_ready => grp_computeHistogram1_fu_987_ap_ready,
        descriptor_V_address0 => grp_computeHistogram1_fu_987_descriptor_V_address0,
        descriptor_V_ce0 => grp_computeHistogram1_fu_987_descriptor_V_ce0,
        descriptor_V_we0 => grp_computeHistogram1_fu_987_descriptor_V_we0,
        descriptor_V_d0 => grp_computeHistogram1_fu_987_descriptor_V_d0,
        descriptor_V_q0 => descriptor1_V_q0,
        descriptor_V_address1 => grp_computeHistogram1_fu_987_descriptor_V_address1,
        descriptor_V_ce1 => grp_computeHistogram1_fu_987_descriptor_V_ce1,
        descriptor_V_we1 => grp_computeHistogram1_fu_987_descriptor_V_we1,
        descriptor_V_d1 => grp_computeHistogram1_fu_987_descriptor_V_d1,
        image_buffer_0_address0 => grp_computeHistogram1_fu_987_image_buffer_0_address0,
        image_buffer_0_ce0 => grp_computeHistogram1_fu_987_image_buffer_0_ce0,
        image_buffer_0_q0 => image_buffer1_0_q0,
        image_buffer_1_address0 => grp_computeHistogram1_fu_987_image_buffer_1_address0,
        image_buffer_1_ce0 => grp_computeHistogram1_fu_987_image_buffer_1_ce0,
        image_buffer_1_q0 => image_buffer1_1_q0,
        image_buffer_1_address1 => grp_computeHistogram1_fu_987_image_buffer_1_address1,
        image_buffer_1_ce1 => grp_computeHistogram1_fu_987_image_buffer_1_ce1,
        image_buffer_1_q1 => image_buffer1_1_q1,
        image_buffer_2_address0 => grp_computeHistogram1_fu_987_image_buffer_2_address0,
        image_buffer_2_ce0 => grp_computeHistogram1_fu_987_image_buffer_2_ce0,
        image_buffer_2_q0 => image_buffer1_2_q0,
        image_buffer_2_address1 => grp_computeHistogram1_fu_987_image_buffer_2_address1,
        image_buffer_2_ce1 => grp_computeHistogram1_fu_987_image_buffer_2_ce1,
        image_buffer_2_q1 => image_buffer1_2_q1,
        image_buffer_3_address0 => grp_computeHistogram1_fu_987_image_buffer_3_address0,
        image_buffer_3_ce0 => grp_computeHistogram1_fu_987_image_buffer_3_ce0,
        image_buffer_3_q0 => image_buffer1_3_q0,
        image_buffer_3_address1 => grp_computeHistogram1_fu_987_image_buffer_3_address1,
        image_buffer_3_ce1 => grp_computeHistogram1_fu_987_image_buffer_3_ce1,
        image_buffer_3_q1 => image_buffer1_3_q1,
        image_buffer_4_address0 => grp_computeHistogram1_fu_987_image_buffer_4_address0,
        image_buffer_4_ce0 => grp_computeHistogram1_fu_987_image_buffer_4_ce0,
        image_buffer_4_q0 => image_buffer1_4_q0,
        image_buffer_4_address1 => grp_computeHistogram1_fu_987_image_buffer_4_address1,
        image_buffer_4_ce1 => grp_computeHistogram1_fu_987_image_buffer_4_ce1,
        image_buffer_4_q1 => image_buffer1_4_q1,
        image_buffer_5_address0 => grp_computeHistogram1_fu_987_image_buffer_5_address0,
        image_buffer_5_ce0 => grp_computeHistogram1_fu_987_image_buffer_5_ce0,
        image_buffer_5_q0 => image_buffer1_5_q0,
        image_buffer_5_address1 => grp_computeHistogram1_fu_987_image_buffer_5_address1,
        image_buffer_5_ce1 => grp_computeHistogram1_fu_987_image_buffer_5_ce1,
        image_buffer_5_q1 => image_buffer1_5_q1,
        image_buffer_6_address0 => grp_computeHistogram1_fu_987_image_buffer_6_address0,
        image_buffer_6_ce0 => grp_computeHistogram1_fu_987_image_buffer_6_ce0,
        image_buffer_6_q0 => image_buffer1_6_q0,
        image_buffer_6_address1 => grp_computeHistogram1_fu_987_image_buffer_6_address1,
        image_buffer_6_ce1 => grp_computeHistogram1_fu_987_image_buffer_6_ce1,
        image_buffer_6_q1 => image_buffer1_6_q1,
        image_buffer_7_address0 => grp_computeHistogram1_fu_987_image_buffer_7_address0,
        image_buffer_7_ce0 => grp_computeHistogram1_fu_987_image_buffer_7_ce0,
        image_buffer_7_q0 => image_buffer1_7_q0,
        image_buffer_7_address1 => grp_computeHistogram1_fu_987_image_buffer_7_address1,
        image_buffer_7_ce1 => grp_computeHistogram1_fu_987_image_buffer_7_ce1,
        image_buffer_7_q1 => image_buffer1_7_q1,
        image_buffer_8_address0 => grp_computeHistogram1_fu_987_image_buffer_8_address0,
        image_buffer_8_ce0 => grp_computeHistogram1_fu_987_image_buffer_8_ce0,
        image_buffer_8_q0 => image_buffer1_8_q0,
        image_buffer_8_address1 => grp_computeHistogram1_fu_987_image_buffer_8_address1,
        image_buffer_8_ce1 => grp_computeHistogram1_fu_987_image_buffer_8_ce1,
        image_buffer_8_q1 => image_buffer1_8_q1,
        image_buffer_9_address0 => grp_computeHistogram1_fu_987_image_buffer_9_address0,
        image_buffer_9_ce0 => grp_computeHistogram1_fu_987_image_buffer_9_ce0,
        image_buffer_9_q0 => image_buffer1_9_q0,
        image_buffer_9_address1 => grp_computeHistogram1_fu_987_image_buffer_9_address1,
        image_buffer_9_ce1 => grp_computeHistogram1_fu_987_image_buffer_9_ce1,
        image_buffer_9_q1 => image_buffer1_9_q1,
        image_buffer_10_address0 => grp_computeHistogram1_fu_987_image_buffer_10_address0,
        image_buffer_10_ce0 => grp_computeHistogram1_fu_987_image_buffer_10_ce0,
        image_buffer_10_q0 => image_buffer1_10_q0,
        image_buffer_10_address1 => grp_computeHistogram1_fu_987_image_buffer_10_address1,
        image_buffer_10_ce1 => grp_computeHistogram1_fu_987_image_buffer_10_ce1,
        image_buffer_10_q1 => image_buffer1_10_q1,
        image_buffer_11_address0 => grp_computeHistogram1_fu_987_image_buffer_11_address0,
        image_buffer_11_ce0 => grp_computeHistogram1_fu_987_image_buffer_11_ce0,
        image_buffer_11_q0 => image_buffer1_11_q0,
        image_buffer_11_address1 => grp_computeHistogram1_fu_987_image_buffer_11_address1,
        image_buffer_11_ce1 => grp_computeHistogram1_fu_987_image_buffer_11_ce1,
        image_buffer_11_q1 => image_buffer1_11_q1,
        image_buffer_12_address0 => grp_computeHistogram1_fu_987_image_buffer_12_address0,
        image_buffer_12_ce0 => grp_computeHistogram1_fu_987_image_buffer_12_ce0,
        image_buffer_12_q0 => image_buffer1_12_q0,
        image_buffer_12_address1 => grp_computeHistogram1_fu_987_image_buffer_12_address1,
        image_buffer_12_ce1 => grp_computeHistogram1_fu_987_image_buffer_12_ce1,
        image_buffer_12_q1 => image_buffer1_12_q1,
        image_buffer_13_address0 => grp_computeHistogram1_fu_987_image_buffer_13_address0,
        image_buffer_13_ce0 => grp_computeHistogram1_fu_987_image_buffer_13_ce0,
        image_buffer_13_q0 => image_buffer1_13_q0,
        image_buffer_13_address1 => grp_computeHistogram1_fu_987_image_buffer_13_address1,
        image_buffer_13_ce1 => grp_computeHistogram1_fu_987_image_buffer_13_ce1,
        image_buffer_13_q1 => image_buffer1_13_q1,
        image_buffer_14_address0 => grp_computeHistogram1_fu_987_image_buffer_14_address0,
        image_buffer_14_ce0 => grp_computeHistogram1_fu_987_image_buffer_14_ce0,
        image_buffer_14_q0 => image_buffer1_14_q0,
        image_buffer_14_address1 => grp_computeHistogram1_fu_987_image_buffer_14_address1,
        image_buffer_14_ce1 => grp_computeHistogram1_fu_987_image_buffer_14_ce1,
        image_buffer_14_q1 => image_buffer1_14_q1,
        image_buffer_15_address0 => grp_computeHistogram1_fu_987_image_buffer_15_address0,
        image_buffer_15_ce0 => grp_computeHistogram1_fu_987_image_buffer_15_ce0,
        image_buffer_15_q0 => image_buffer1_15_q0,
        image_buffer_15_address1 => grp_computeHistogram1_fu_987_image_buffer_15_address1,
        image_buffer_15_ce1 => grp_computeHistogram1_fu_987_image_buffer_15_ce1,
        image_buffer_15_q1 => image_buffer1_15_q1,
        image_buffer_16_address0 => grp_computeHistogram1_fu_987_image_buffer_16_address0,
        image_buffer_16_ce0 => grp_computeHistogram1_fu_987_image_buffer_16_ce0,
        image_buffer_16_q0 => image_buffer1_16_q0,
        image_buffer_16_address1 => grp_computeHistogram1_fu_987_image_buffer_16_address1,
        image_buffer_16_ce1 => grp_computeHistogram1_fu_987_image_buffer_16_ce1,
        image_buffer_16_q1 => image_buffer1_16_q1,
        image_buffer_17_address0 => grp_computeHistogram1_fu_987_image_buffer_17_address0,
        image_buffer_17_ce0 => grp_computeHistogram1_fu_987_image_buffer_17_ce0,
        image_buffer_17_q0 => image_buffer1_17_q0,
        sum_address0 => grp_computeHistogram1_fu_987_sum_address0,
        sum_ce0 => grp_computeHistogram1_fu_987_sum_ce0,
        sum_we0 => grp_computeHistogram1_fu_987_sum_we0,
        sum_d0 => grp_computeHistogram1_fu_987_sum_d0,
        sum_q0 => sum1_q0,
        sum_address1 => grp_computeHistogram1_fu_987_sum_address1,
        sum_ce1 => grp_computeHistogram1_fu_987_sum_ce1,
        sum_we1 => grp_computeHistogram1_fu_987_sum_we1,
        sum_d1 => grp_computeHistogram1_fu_987_sum_d1);

    grp_normalizeHisto0_fu_1019 : component normalizeHisto0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_normalizeHisto0_fu_1019_ap_start,
        ap_done => grp_normalizeHisto0_fu_1019_ap_done,
        ap_idle => grp_normalizeHisto0_fu_1019_ap_idle,
        ap_ready => grp_normalizeHisto0_fu_1019_ap_ready,
        sum_address0 => grp_normalizeHisto0_fu_1019_sum_address0,
        sum_ce0 => grp_normalizeHisto0_fu_1019_sum_ce0,
        sum_q0 => sum0_q0,
        descriptor_V_address0 => grp_normalizeHisto0_fu_1019_descriptor_V_address0,
        descriptor_V_ce0 => grp_normalizeHisto0_fu_1019_descriptor_V_ce0,
        descriptor_V_q0 => descriptor0_V_q0,
        normalized_V_address1 => grp_normalizeHisto0_fu_1019_normalized_V_address1,
        normalized_V_ce1 => grp_normalizeHisto0_fu_1019_normalized_V_ce1,
        normalized_V_we1 => grp_normalizeHisto0_fu_1019_normalized_V_we1,
        normalized_V_d1 => grp_normalizeHisto0_fu_1019_normalized_V_d1);

    grp_normalizeHisto1_fu_1026 : component normalizeHisto1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_normalizeHisto1_fu_1026_ap_start,
        ap_done => grp_normalizeHisto1_fu_1026_ap_done,
        ap_idle => grp_normalizeHisto1_fu_1026_ap_idle,
        ap_ready => grp_normalizeHisto1_fu_1026_ap_ready,
        sum_address0 => grp_normalizeHisto1_fu_1026_sum_address0,
        sum_ce0 => grp_normalizeHisto1_fu_1026_sum_ce0,
        sum_q0 => sum1_q0,
        descriptor_V_address0 => grp_normalizeHisto1_fu_1026_descriptor_V_address0,
        descriptor_V_ce0 => grp_normalizeHisto1_fu_1026_descriptor_V_ce0,
        descriptor_V_q0 => descriptor1_V_q0,
        normalized_V_address1 => grp_normalizeHisto1_fu_1026_normalized_V_address1,
        normalized_V_ce1 => grp_normalizeHisto1_fu_1026_normalized_V_ce1,
        normalized_V_we1 => grp_normalizeHisto1_fu_1026_normalized_V_we1,
        normalized_V_d1 => grp_normalizeHisto1_fu_1026_normalized_V_d1);

    hog_urem_10ns_7nsAem_U53 : component hog_urem_10ns_7nsAem
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar_flatten_phi_fu_867_p4,
        din1 => grp_fu_1127_p1,
        ce => grp_fu_1127_ce,
        dout => grp_fu_1127_p2);

    hog_mul_32s_5ns_3Bew_U54 : component hog_mul_32s_5ns_3Bew
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => specs_load_reg_1570,
        din1 => grp_fu_1173_p1,
        ce => grp_fu_1173_ce,
        dout => grp_fu_1173_p2);

    hog_urem_10ns_7nsAem_U55 : component hog_urem_10ns_7nsAem
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_38_reg_1615,
        din1 => grp_fu_1181_p1,
        ce => grp_fu_1181_ce,
        dout => grp_fu_1181_p2);

    hog_urem_10ns_7nsAem_U56 : component hog_urem_10ns_7nsAem
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => indvar_flatten8_phi_fu_901_p4,
        din1 => grp_fu_1303_p1,
        ce => grp_fu_1303_ce,
        dout => grp_fu_1303_p2);

    hog_mul_32s_5ns_3Bew_U57 : component hog_mul_32s_5ns_3Bew
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => specs_load_reg_1570,
        din1 => grp_fu_1312_p1,
        ce => grp_fu_1312_ce,
        dout => grp_fu_1312_p2);

    hog_urem_10ns_7nsAem_U58 : component hog_urem_10ns_7nsAem
    generic map (
        ID => 1,
        NUM_STAGE => 14,
        din0_WIDTH => 10,
        din1_WIDTH => 7,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_43_reg_1697,
        din1 => grp_fu_1357_p1,
        ce => grp_fu_1357_ce,
        dout => grp_fu_1357_p2);

    hog_mul_10s_10s_2CeG_U59 : component hog_mul_10s_10s_2CeG
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => weights_load_1_reg_1797,
        din1 => normalized1_V_load_reg_1792,
        ce => ap_const_logic_1,
        dout => grp_fu_1513_p2);

    hog_mul_mul_10ns_DeQ_U60 : component hog_mul_mul_10ns_DeQ
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1539_p0,
        din1 => grp_fu_1539_p1,
        ce => grp_fu_1539_ce,
        dout => grp_fu_1539_p2);

    hog_mul_mul_10ns_DeQ_U61 : component hog_mul_mul_10ns_DeQ
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1546_p0,
        din1 => grp_fu_1546_p1,
        ce => grp_fu_1546_ce,
        dout => grp_fu_1546_p2);

    hog_mac_muladd_10Ee0_U62 : component hog_mac_muladd_10Ee0
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_pipeline_reg_pp2_iter3_weights_load_reg_1787,
        din1 => ap_pipeline_reg_pp2_iter3_normalized0_V_load_reg_1782,
        din2 => r_V_1_reg_1822,
        ce => ap_const_logic_1,
        dout => grp_fu_1553_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_1081_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = exitcond_flatten_fu_1081_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_flatten_fu_1081_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state28)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                    ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = tmp_i_fu_1452_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done))))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = tmp_i_fu_1452_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((ap_const_lv1_0 = tmp_i_fu_1452_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
            end if;
        end if;
    end process;


    ap_reg_grp_computeHistogram0_fu_955_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_computeHistogram0_fu_955_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                    ap_reg_grp_computeHistogram0_fu_955_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_computeHistogram0_fu_955_ap_ready)) then 
                    ap_reg_grp_computeHistogram0_fu_955_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_computeHistogram1_fu_987_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_computeHistogram1_fu_987_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state53))) then 
                    ap_reg_grp_computeHistogram1_fu_987_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_computeHistogram1_fu_987_ap_ready)) then 
                    ap_reg_grp_computeHistogram1_fu_987_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_normalizeHisto0_fu_1019_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_normalizeHisto0_fu_1019_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_reg_grp_normalizeHisto0_fu_1019_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_normalizeHisto0_fu_1019_ap_ready)) then 
                    ap_reg_grp_normalizeHisto0_fu_1019_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_normalizeHisto1_fu_1026_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_normalizeHisto1_fu_1026_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
                    ap_reg_grp_normalizeHisto1_fu_1026_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_normalizeHisto1_fu_1026_ap_ready)) then 
                    ap_reg_grp_normalizeHisto1_fu_1026_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_INPUT_IMAGE_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_INPUT_IMAGE_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))))) then 
                    ap_reg_ioackin_INPUT_IMAGE_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_1 = INPUT_IMAGE_ARREADY) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_1 = INPUT_IMAGE_ARREADY) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
                    ap_reg_ioackin_INPUT_IMAGE_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    classify_0_reg_931_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter6_tmp_i_reg_1748))) then 
                classify_0_reg_931 <= sum_fu_1528_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done))))) then 
                classify_0_reg_931 <= ap_const_lv26_3FFFFF2;
            end if; 
        end if;
    end process;

    i4_reg_909_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1665))) then 
                i4_reg_909 <= p_sum2_cast_mid2_v_v_s_reg_1679;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                i4_reg_909 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_i_reg_943_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = tmp_i_reg_1748) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
                i_i_reg_943 <= i_3_reg_1752;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done))))) then 
                i_i_reg_943 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_reg_875_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1588))) then 
                i_reg_875 <= tmp_mid2_v_v_reg_1602;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_reg_875 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar1_reg_920_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2))) then 
                indvar1_reg_920 <= indvar_next1_fu_1297_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                indvar1_reg_920 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten8_reg_897_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1665))) then 
                indvar_flatten8_reg_897 <= indvar_flatten_next9_reg_1669;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state28))) then 
                indvar_flatten8_reg_897 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_863_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1588))) then 
                indvar_flatten_reg_863 <= indvar_flatten_next_reg_1592;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_863 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_reg_886_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_1081_p2))) then 
                indvar_reg_886 <= indvar_next_fu_1121_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                indvar_reg_886 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter12_exitcond_flatten1_reg_1665))) then
                INPUT_IMAGE_addr_1_reg_1717 <= image02_sum7_cast_fu_1384_p1(32 - 1 downto 0);
                tmp_49_reg_1723 <= grp_fu_1303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1588))) then
                INPUT_IMAGE_addr_reg_1645 <= image02_sum_cast_fu_1212_p1(32 - 1 downto 0);
                tmp_45_reg_1651 <= tmp_45_fu_1222_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then
                ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter10_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter11_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter12_tmp_45_t_reg_1631 <= tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter13_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter13_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter12_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter14_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter13_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter15_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter14_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter16_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter15_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter17_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter16_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter18_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter17_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter19_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter18_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter20_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter19_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter21_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter20_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 <= ap_pipeline_reg_pp0_iter21_tmp_45_t_reg_1631;
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter2_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter1_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter2_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter1_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter3_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter2_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter3_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter2_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter4_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter3_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter4_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter3_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter5_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter4_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter5_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter4_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter6_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter5_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter6_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter5_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter7_indvar_mid2_reg_1597 <= ap_pipeline_reg_pp0_iter6_indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter7_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter6_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter8_tmp_mid2_v_v_reg_1602 <= ap_pipeline_reg_pp0_iter7_tmp_mid2_v_v_reg_1602;
                ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_1588 <= ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_1588;
                tmp_38_reg_1615 <= tmp_38_fu_1164_p2;
                tmp_40_reg_1655 <= grp_fu_1181_p2;
                tmp_45_t_reg_1631 <= grp_fu_1539_p2(20 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1588 <= exitcond_flatten_reg_1588;
                ap_pipeline_reg_pp0_iter1_indvar_mid2_reg_1597 <= indvar_mid2_reg_1597;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_v_v_reg_1602 <= tmp_mid2_v_v_reg_1602;
                exitcond_flatten_reg_1588 <= exitcond_flatten_fu_1081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) then
                ap_pipeline_reg_pp1_iter10_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter9_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter11_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter10_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter12_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter11_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter12_tmp_52_t_reg_1708 <= tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter13_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter12_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter13_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter12_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter14_INPUT_IMAGE_addr_1_reg_1717 <= INPUT_IMAGE_addr_1_reg_1717;
                ap_pipeline_reg_pp1_iter14_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter13_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter15_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter14_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter16_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter15_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter17_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter16_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter18_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter17_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter19_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter18_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter20_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter19_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter21_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter20_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 <= ap_pipeline_reg_pp1_iter21_tmp_52_t_reg_1708;
                ap_pipeline_reg_pp1_iter2_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter1_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter2_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter1_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter2_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter1_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter3_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter2_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter3_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter2_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter3_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter2_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter4_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter3_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter4_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter3_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter4_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter3_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter5_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter4_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter5_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter4_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter5_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter4_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter6_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter5_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter6_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter5_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter6_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter5_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter7_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter6_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter7_indvar1_mid2_reg_1674 <= ap_pipeline_reg_pp1_iter6_indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter7_p_sum2_cast_mid2_v_v_s_reg_1679 <= ap_pipeline_reg_pp1_iter6_p_sum2_cast_mid2_v_v_s_reg_1679;
                ap_pipeline_reg_pp1_iter8_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter7_exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter9_exitcond_flatten1_reg_1665 <= ap_pipeline_reg_pp1_iter8_exitcond_flatten1_reg_1665;
                tmp_43_reg_1697 <= tmp_43_fu_1348_p2;
                tmp_52_t_reg_1708 <= grp_fu_1546_p2(20 downto 16);
                tmp_s_reg_1732 <= grp_fu_1357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then
                ap_pipeline_reg_pp1_iter1_exitcond_flatten1_reg_1665 <= exitcond_flatten1_reg_1665;
                ap_pipeline_reg_pp1_iter1_indvar1_mid2_reg_1674 <= indvar1_mid2_reg_1674;
                ap_pipeline_reg_pp1_iter1_p_sum2_cast_mid2_v_v_s_reg_1679 <= p_sum2_cast_mid2_v_v_s_reg_1679;
                exitcond_flatten1_reg_1665 <= exitcond_flatten1_fu_1257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0))) then
                ap_pipeline_reg_pp2_iter1_tmp_i_reg_1748 <= tmp_i_reg_1748;
                tmp_i_reg_1748 <= tmp_i_fu_1452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp2_iter2_tmp_i_reg_1748 <= ap_pipeline_reg_pp2_iter1_tmp_i_reg_1748;
                ap_pipeline_reg_pp2_iter3_normalized0_V_load_reg_1782 <= normalized0_V_load_reg_1782;
                ap_pipeline_reg_pp2_iter3_tmp_i_reg_1748 <= ap_pipeline_reg_pp2_iter2_tmp_i_reg_1748;
                ap_pipeline_reg_pp2_iter3_weights_load_reg_1787 <= weights_load_reg_1787;
                ap_pipeline_reg_pp2_iter4_tmp_i_reg_1748 <= ap_pipeline_reg_pp2_iter3_tmp_i_reg_1748;
                ap_pipeline_reg_pp2_iter5_tmp_i_reg_1748 <= ap_pipeline_reg_pp2_iter4_tmp_i_reg_1748;
                ap_pipeline_reg_pp2_iter6_tmp_i_reg_1748 <= ap_pipeline_reg_pp2_iter5_tmp_i_reg_1748;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then
                i_3_reg_1752 <= i_3_fu_1458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2))) then
                indvar1_mid2_reg_1674 <= indvar1_mid2_fu_1275_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                indvar_flatten_next9_reg_1669 <= indvar_flatten_next9_fu_1263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                indvar_flatten_next_reg_1592 <= indvar_flatten_next_fu_1087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = exitcond_flatten_fu_1081_p2))) then
                indvar_mid2_reg_1597 <= indvar_mid2_fu_1099_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_tmp_i_reg_1748)) then
                normalized0_V_load_reg_1782 <= normalized0_V_q0;
                normalized1_V_load_reg_1792 <= normalized1_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state56) and not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done))))) then
                    offset_assign_cast_reg_1742(28 downto 4) <= offset_assign_cast_fu_1448_p1(28 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter12_exitcond_flatten_reg_1588))) then
                p_sum1_cast_mid2_v_reg_1635 <= p_sum1_cast_mid2_v_fu_1199_p2;
                tmp_reg_1640 <= grp_fu_1127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter11_exitcond_flatten1_reg_1665))) then
                p_sum2_cast_mid2_v_v_2_reg_1712 <= grp_fu_1312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2))) then
                p_sum2_cast_mid2_v_v_s_reg_1679 <= p_sum2_cast_mid2_v_v_s_fu_1289_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_pipeline_reg_pp2_iter4_tmp_i_reg_1748)) then
                r_V_1_reg_1822 <= grp_fu_1513_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))))) then
                reg_1033 <= INPUT_IMAGE_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                specs_load_reg_1570 <= specs_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state28))) then
                tmp3_cast_reg_1660 <= tmp3_cast_fu_1253_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = tmp_i_fu_1452_p2))) then
                tmp7_reg_1757 <= tmp7_fu_1468_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                tmp_35_cast_reg_1582 <= tmp_35_cast_fu_1077_p1;
                tmp_cast_reg_1576 <= tmp_cast_fu_1073_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp2_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter5_tmp_i_reg_1748))) then
                tmp_44_reg_1827 <= grp_fu_1553_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_lv1_0 = ap_pipeline_reg_pp1_iter13_exitcond_flatten1_reg_1665))) then
                tmp_50_reg_1728 <= tmp_50_fu_1394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_1081_p2))) then
                tmp_mid2_v_v_reg_1602 <= tmp_mid2_v_v_fu_1113_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_tmp_i_reg_1748) and (ap_const_logic_1 = ap_enable_reg_pp2_iter2))) then
                weights_load_1_reg_1797 <= weights_q1;
                weights_load_reg_1787 <= weights_q0;
            end if;
        end if;
    end process;
    offset_assign_cast_reg_1742(3 downto 0) <= "0000";
    offset_assign_cast_reg_1742(29) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, exitcond_flatten_fu_1081_p2, ap_enable_reg_pp0_iter0, exitcond_flatten1_fu_1257_p2, ap_enable_reg_pp1_iter0, grp_normalizeHisto0_fu_1019_ap_done, grp_normalizeHisto1_fu_1026_ap_done, tmp_i_fu_1452_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter23, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter23, ap_enable_reg_pp2_iter1, grp_computeHistogram0_fu_955_ap_done, grp_computeHistogram1_fu_987_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter22)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1081_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter22))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1081_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter22)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter22))) or (not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1257_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp1_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (not(((ap_const_logic_0 = grp_computeHistogram0_fu_955_ap_done) or (ap_const_logic_0 = grp_computeHistogram1_fu_987_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (not(((ap_const_logic_0 = grp_normalizeHisto0_fu_1019_ap_done) or (ap_const_logic_0 = grp_normalizeHisto1_fu_1026_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp2_iter7) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter6)))) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = tmp_i_fu_1452_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = tmp_i_fu_1452_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;

    INPUT_IMAGE_ARADDR_assign_proc : process(INPUT_IMAGE_addr_reg_1645, ap_pipeline_reg_pp1_iter14_INPUT_IMAGE_addr_1_reg_1717, ap_reg_ioackin_INPUT_IMAGE_ARREADY, ap_condition_1744, ap_condition_1757)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_INPUT_IMAGE_ARREADY)) then
            if ((ap_condition_1757 = ap_const_boolean_1)) then 
                INPUT_IMAGE_ARADDR <= ap_pipeline_reg_pp1_iter14_INPUT_IMAGE_addr_1_reg_1717;
            elsif ((ap_condition_1744 = ap_const_boolean_1)) then 
                INPUT_IMAGE_ARADDR <= INPUT_IMAGE_addr_reg_1645;
            else 
                INPUT_IMAGE_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            INPUT_IMAGE_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    INPUT_IMAGE_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_reg_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))) and (ap_const_logic_0 = ap_reg_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_reg_ioackin_INPUT_IMAGE_ARREADY) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            INPUT_IMAGE_ARVALID <= ap_const_logic_1;
        else 
            INPUT_IMAGE_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_IMAGE_RREADY_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))))))) then 
            INPUT_IMAGE_RREADY <= ap_const_logic_1;
        else 
            INPUT_IMAGE_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_IMAGE_blk_n_AR_assign_proc : process(m_axi_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp1_iter15, tmp_50_reg_1728)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728))))) then 
            INPUT_IMAGE_blk_n_AR <= m_axi_INPUT_IMAGE_ARREADY;
        else 
            INPUT_IMAGE_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    INPUT_IMAGE_blk_n_R_assign_proc : process(m_axi_INPUT_IMAGE_RVALID, ap_enable_reg_pp0_iter22, ap_enable_reg_pp1_iter22)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter22) or (ap_const_logic_1 = ap_enable_reg_pp1_iter22))) then 
            INPUT_IMAGE_blk_n_R <= m_axi_INPUT_IMAGE_RVALID;
        else 
            INPUT_IMAGE_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state28 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state53 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state54 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state55 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state56 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state65 <= ap_CS_fsm(11 downto 11);

    ap_condition_1744_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID)
    begin
                ap_condition_1744 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))));
    end process;


    ap_condition_1757_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID)
    begin
                ap_condition_1757 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0))));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state65)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state65)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_INPUT_IMAGE_ARREADY_assign_proc : process(INPUT_IMAGE_ARREADY, ap_reg_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_INPUT_IMAGE_ARREADY)) then 
            ap_sig_ioackin_INPUT_IMAGE_ARREADY <= INPUT_IMAGE_ARREADY;
        else 
            ap_sig_ioackin_INPUT_IMAGE_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    descriptor0_V_address0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram0_fu_955_descriptor_V_address0, grp_normalizeHisto0_fu_1019_descriptor_V_address0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            descriptor0_V_address0 <= grp_normalizeHisto0_fu_1019_descriptor_V_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor0_V_address0 <= grp_computeHistogram0_fu_955_descriptor_V_address0;
        else 
            descriptor0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    descriptor0_V_ce0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram0_fu_955_descriptor_V_ce0, grp_normalizeHisto0_fu_1019_descriptor_V_ce0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            descriptor0_V_ce0 <= grp_normalizeHisto0_fu_1019_descriptor_V_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor0_V_ce0 <= grp_computeHistogram0_fu_955_descriptor_V_ce0;
        else 
            descriptor0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor0_V_ce1_assign_proc : process(grp_computeHistogram0_fu_955_descriptor_V_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor0_V_ce1 <= grp_computeHistogram0_fu_955_descriptor_V_ce1;
        else 
            descriptor0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor0_V_we0_assign_proc : process(grp_computeHistogram0_fu_955_descriptor_V_we0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor0_V_we0 <= grp_computeHistogram0_fu_955_descriptor_V_we0;
        else 
            descriptor0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor0_V_we1_assign_proc : process(grp_computeHistogram0_fu_955_descriptor_V_we1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor0_V_we1 <= grp_computeHistogram0_fu_955_descriptor_V_we1;
        else 
            descriptor0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor1_V_address0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram1_fu_987_descriptor_V_address0, grp_normalizeHisto1_fu_1026_descriptor_V_address0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            descriptor1_V_address0 <= grp_normalizeHisto1_fu_1026_descriptor_V_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor1_V_address0 <= grp_computeHistogram1_fu_987_descriptor_V_address0;
        else 
            descriptor1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    descriptor1_V_ce0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram1_fu_987_descriptor_V_ce0, grp_normalizeHisto1_fu_1026_descriptor_V_ce0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            descriptor1_V_ce0 <= grp_normalizeHisto1_fu_1026_descriptor_V_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor1_V_ce0 <= grp_computeHistogram1_fu_987_descriptor_V_ce0;
        else 
            descriptor1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor1_V_ce1_assign_proc : process(grp_computeHistogram1_fu_987_descriptor_V_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor1_V_ce1 <= grp_computeHistogram1_fu_987_descriptor_V_ce1;
        else 
            descriptor1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor1_V_we0_assign_proc : process(grp_computeHistogram1_fu_987_descriptor_V_we0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor1_V_we0 <= grp_computeHistogram1_fu_987_descriptor_V_we0;
        else 
            descriptor1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    descriptor1_V_we1_assign_proc : process(grp_computeHistogram1_fu_987_descriptor_V_we1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            descriptor1_V_we1 <= grp_computeHistogram1_fu_987_descriptor_V_we1;
        else 
            descriptor1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_1269_p2 <= "1" when (indvar1_reg_920 = ap_const_lv6_22) else "0";
    exitcond_flatten1_fu_1257_p2 <= "1" when (indvar_flatten8_phi_fu_901_p4 = ap_const_lv10_264) else "0";
    exitcond_flatten_fu_1081_p2 <= "1" when (indvar_flatten_phi_fu_867_p4 = ap_const_lv10_264) else "0";
    exitcond_fu_1093_p2 <= "1" when (indvar_reg_886 = ap_const_lv6_22) else "0";
    grp_computeHistogram0_fu_955_ap_start <= ap_reg_grp_computeHistogram0_fu_955_ap_start;
    grp_computeHistogram1_fu_987_ap_start <= ap_reg_grp_computeHistogram1_fu_987_ap_start;

    grp_fu_1127_ce_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_CS_fsm_pp0_stage0, ap_sig_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1127_ce <= ap_const_logic_1;
        else 
            grp_fu_1127_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1127_p1 <= ap_const_lv10_22(7 - 1 downto 0);

    grp_fu_1173_ce_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_CS_fsm_pp0_stage0, ap_sig_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1173_ce <= ap_const_logic_1;
        else 
            grp_fu_1173_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1173_p1 <= grp_fu_1173_p10(5 - 1 downto 0);
    grp_fu_1173_p10 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter8_tmp_mid2_v_v_reg_1602),32));

    grp_fu_1181_ce_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_CS_fsm_pp0_stage0, ap_sig_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1181_ce <= ap_const_logic_1;
        else 
            grp_fu_1181_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1181_p1 <= ap_const_lv10_22(7 - 1 downto 0);

    grp_fu_1303_ce_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1303_ce <= ap_const_logic_1;
        else 
            grp_fu_1303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1303_p1 <= ap_const_lv10_22(7 - 1 downto 0);

    grp_fu_1312_ce_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1312_ce <= ap_const_logic_1;
        else 
            grp_fu_1312_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1312_p1 <= grp_fu_1312_p10(5 - 1 downto 0);
    grp_fu_1312_p10 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp1_iter7_p_sum2_cast_mid2_v_v_s_reg_1679),32));

    grp_fu_1357_ce_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1357_ce <= ap_const_logic_1;
        else 
            grp_fu_1357_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1357_p1 <= ap_const_lv10_22(7 - 1 downto 0);

    grp_fu_1539_ce_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_CS_fsm_pp0_stage0, ap_sig_ioackin_INPUT_IMAGE_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1539_ce <= ap_const_logic_1;
        else 
            grp_fu_1539_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1539_p0 <= grp_fu_1539_p00(10 - 1 downto 0);
    grp_fu_1539_p00 <= std_logic_vector(resize(unsigned(tmp_38_reg_1615),22));
    grp_fu_1539_p1 <= ap_const_lv22_788(12 - 1 downto 0);

    grp_fu_1546_ce_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_CS_fsm_pp1_stage0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))))) then 
            grp_fu_1546_ce <= ap_const_logic_1;
        else 
            grp_fu_1546_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1546_p0 <= grp_fu_1546_p00(10 - 1 downto 0);
    grp_fu_1546_p00 <= std_logic_vector(resize(unsigned(tmp_43_reg_1697),22));
    grp_fu_1546_p1 <= ap_const_lv22_788(12 - 1 downto 0);
    grp_normalizeHisto0_fu_1019_ap_start <= ap_reg_grp_normalizeHisto0_fu_1019_ap_start;
    grp_normalizeHisto1_fu_1026_ap_start <= ap_reg_grp_normalizeHisto1_fu_1026_ap_start;

    i4_phi_fu_913_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, i4_reg_909, exitcond_flatten1_reg_1665, p_sum2_cast_mid2_v_v_s_reg_1679, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1665))) then 
            i4_phi_fu_913_p4 <= p_sum2_cast_mid2_v_v_s_reg_1679;
        else 
            i4_phi_fu_913_p4 <= i4_reg_909;
        end if; 
    end process;

    i_1_fu_1283_p2 <= std_logic_vector(unsigned(i4_phi_fu_913_p4) + unsigned(ap_const_lv5_1));
    i_3_fu_1458_p2 <= std_logic_vector(unsigned(i_i_phi_fu_947_p4) + unsigned(ap_const_lv7_1));
    i_i_cast9_fu_1474_p1 <= std_logic_vector(resize(unsigned(i_i_reg_943),30));
    i_i_cast_fu_1464_p1 <= std_logic_vector(resize(unsigned(i_i_phi_fu_947_p4),8));

    i_i_phi_fu_947_p4_assign_proc : process(i_i_reg_943, tmp_i_reg_1748, ap_CS_fsm_pp2_stage0, i_3_reg_1752, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_lv1_0 = tmp_i_reg_1748) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            i_i_phi_fu_947_p4 <= i_3_reg_1752;
        else 
            i_i_phi_fu_947_p4 <= i_i_reg_943;
        end if; 
    end process;


    i_phi_fu_879_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, i_reg_875, exitcond_flatten_reg_1588, tmp_mid2_v_v_reg_1602, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1588))) then 
            i_phi_fu_879_p4 <= tmp_mid2_v_v_reg_1602;
        else 
            i_phi_fu_879_p4 <= i_reg_875;
        end if; 
    end process;

    i_s_fu_1107_p2 <= std_logic_vector(unsigned(i_phi_fu_879_p4) + unsigned(ap_const_lv5_1));
        image02_sum7_cast_fu_1384_p1 <= std_logic_vector(resize(signed(image02_sum7_fu_1379_p2),64));

    image02_sum7_fu_1379_p2 <= std_logic_vector(unsigned(p_sum2_cast_mid2_v_fu_1374_p2) + unsigned(tmp_cast_reg_1576));
        image02_sum_cast_fu_1212_p1 <= std_logic_vector(resize(signed(image02_sum_fu_1207_p2),64));

    image02_sum_fu_1207_p2 <= std_logic_vector(signed(p_sum1_cast_mid2_cast_fu_1204_p1) + signed(tmp_cast_reg_1576));

    image_buffer0_0_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_0_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_0_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_0_address0 <= grp_computeHistogram0_fu_955_image_buffer_0_address0;
        else 
            image_buffer0_0_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_0_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_0_ce0 <= grp_computeHistogram0_fu_955_image_buffer_0_ce0;
        else 
            image_buffer0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_0)))) then 
            image_buffer0_0_we0 <= ap_const_logic_1;
        else 
            image_buffer0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_10_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_10_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_10_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_10_address0 <= grp_computeHistogram0_fu_955_image_buffer_10_address0;
        else 
            image_buffer0_10_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_10_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_10_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_10_ce0 <= grp_computeHistogram0_fu_955_image_buffer_10_ce0;
        else 
            image_buffer0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_10_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_10_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_10_ce1 <= grp_computeHistogram0_fu_955_image_buffer_10_ce1;
        else 
            image_buffer0_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_10_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_A)))) then 
            image_buffer0_10_we0 <= ap_const_logic_1;
        else 
            image_buffer0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_11_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_11_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_11_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_11_address0 <= grp_computeHistogram0_fu_955_image_buffer_11_address0;
        else 
            image_buffer0_11_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_11_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_11_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_11_ce0 <= grp_computeHistogram0_fu_955_image_buffer_11_ce0;
        else 
            image_buffer0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_11_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_11_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_11_ce1 <= grp_computeHistogram0_fu_955_image_buffer_11_ce1;
        else 
            image_buffer0_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_11_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_B)))) then 
            image_buffer0_11_we0 <= ap_const_logic_1;
        else 
            image_buffer0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_12_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_12_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_12_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_12_address0 <= grp_computeHistogram0_fu_955_image_buffer_12_address0;
        else 
            image_buffer0_12_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_12_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_12_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_12_ce0 <= grp_computeHistogram0_fu_955_image_buffer_12_ce0;
        else 
            image_buffer0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_12_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_12_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_12_ce1 <= grp_computeHistogram0_fu_955_image_buffer_12_ce1;
        else 
            image_buffer0_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_12_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_C)))) then 
            image_buffer0_12_we0 <= ap_const_logic_1;
        else 
            image_buffer0_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_13_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_13_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_13_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_13_address0 <= grp_computeHistogram0_fu_955_image_buffer_13_address0;
        else 
            image_buffer0_13_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_13_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_13_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_13_ce0 <= grp_computeHistogram0_fu_955_image_buffer_13_ce0;
        else 
            image_buffer0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_13_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_13_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_13_ce1 <= grp_computeHistogram0_fu_955_image_buffer_13_ce1;
        else 
            image_buffer0_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_13_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_D)))) then 
            image_buffer0_13_we0 <= ap_const_logic_1;
        else 
            image_buffer0_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_14_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_14_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_14_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_14_address0 <= grp_computeHistogram0_fu_955_image_buffer_14_address0;
        else 
            image_buffer0_14_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_14_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_14_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_14_ce0 <= grp_computeHistogram0_fu_955_image_buffer_14_ce0;
        else 
            image_buffer0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_14_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_14_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_14_ce1 <= grp_computeHistogram0_fu_955_image_buffer_14_ce1;
        else 
            image_buffer0_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_14_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_E)))) then 
            image_buffer0_14_we0 <= ap_const_logic_1;
        else 
            image_buffer0_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_15_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_15_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_15_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_15_address0 <= grp_computeHistogram0_fu_955_image_buffer_15_address0;
        else 
            image_buffer0_15_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_15_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_15_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_15_ce0 <= grp_computeHistogram0_fu_955_image_buffer_15_ce0;
        else 
            image_buffer0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_15_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_15_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_15_ce1 <= grp_computeHistogram0_fu_955_image_buffer_15_ce1;
        else 
            image_buffer0_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_15_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_F)))) then 
            image_buffer0_15_we0 <= ap_const_logic_1;
        else 
            image_buffer0_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_16_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_16_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_16_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_16_address0 <= grp_computeHistogram0_fu_955_image_buffer_16_address0;
        else 
            image_buffer0_16_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_16_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_16_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_16_ce0 <= grp_computeHistogram0_fu_955_image_buffer_16_ce0;
        else 
            image_buffer0_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_16_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_16_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_16_ce1 <= grp_computeHistogram0_fu_955_image_buffer_16_ce1;
        else 
            image_buffer0_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_16_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_10)))) then 
            image_buffer0_16_we0 <= ap_const_logic_1;
        else 
            image_buffer0_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_17_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_17_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_17_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_17_address0 <= grp_computeHistogram0_fu_955_image_buffer_17_address0;
        else 
            image_buffer0_17_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_17_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_17_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_17_ce0 <= grp_computeHistogram0_fu_955_image_buffer_17_ce0;
        else 
            image_buffer0_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_17_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_0)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_1)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_2)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_3)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_4)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_5)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_6)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_7)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_8)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_9)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_A)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_B)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_C)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_D)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_E)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_F)) and not((ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_10))))) then 
            image_buffer0_17_we0 <= ap_const_logic_1;
        else 
            image_buffer0_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_1_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_1_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_1_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_1_address0 <= grp_computeHistogram0_fu_955_image_buffer_1_address0;
        else 
            image_buffer0_1_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_1_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_1_ce0 <= grp_computeHistogram0_fu_955_image_buffer_1_ce0;
        else 
            image_buffer0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_1_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_1_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_1_ce1 <= grp_computeHistogram0_fu_955_image_buffer_1_ce1;
        else 
            image_buffer0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_1_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_1)))) then 
            image_buffer0_1_we0 <= ap_const_logic_1;
        else 
            image_buffer0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_2_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_2_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_2_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_2_address0 <= grp_computeHistogram0_fu_955_image_buffer_2_address0;
        else 
            image_buffer0_2_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_2_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_2_ce0 <= grp_computeHistogram0_fu_955_image_buffer_2_ce0;
        else 
            image_buffer0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_2_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_2_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_2_ce1 <= grp_computeHistogram0_fu_955_image_buffer_2_ce1;
        else 
            image_buffer0_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_2_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_2)))) then 
            image_buffer0_2_we0 <= ap_const_logic_1;
        else 
            image_buffer0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_3_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_3_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_3_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_3_address0 <= grp_computeHistogram0_fu_955_image_buffer_3_address0;
        else 
            image_buffer0_3_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_3_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_3_ce0 <= grp_computeHistogram0_fu_955_image_buffer_3_ce0;
        else 
            image_buffer0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_3_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_3_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_3_ce1 <= grp_computeHistogram0_fu_955_image_buffer_3_ce1;
        else 
            image_buffer0_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_3_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_3)))) then 
            image_buffer0_3_we0 <= ap_const_logic_1;
        else 
            image_buffer0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_4_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_4_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_4_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_4_address0 <= grp_computeHistogram0_fu_955_image_buffer_4_address0;
        else 
            image_buffer0_4_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_4_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_4_ce0 <= grp_computeHistogram0_fu_955_image_buffer_4_ce0;
        else 
            image_buffer0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_4_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_4_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_4_ce1 <= grp_computeHistogram0_fu_955_image_buffer_4_ce1;
        else 
            image_buffer0_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_4_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_4)))) then 
            image_buffer0_4_we0 <= ap_const_logic_1;
        else 
            image_buffer0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_5_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_5_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_5_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_5_address0 <= grp_computeHistogram0_fu_955_image_buffer_5_address0;
        else 
            image_buffer0_5_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_5_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_5_ce0 <= grp_computeHistogram0_fu_955_image_buffer_5_ce0;
        else 
            image_buffer0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_5_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_5_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_5_ce1 <= grp_computeHistogram0_fu_955_image_buffer_5_ce1;
        else 
            image_buffer0_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_5_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_5)))) then 
            image_buffer0_5_we0 <= ap_const_logic_1;
        else 
            image_buffer0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_6_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_6_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_6_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_6_address0 <= grp_computeHistogram0_fu_955_image_buffer_6_address0;
        else 
            image_buffer0_6_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_6_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_6_ce0 <= grp_computeHistogram0_fu_955_image_buffer_6_ce0;
        else 
            image_buffer0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_6_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_6_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_6_ce1 <= grp_computeHistogram0_fu_955_image_buffer_6_ce1;
        else 
            image_buffer0_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_6_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_6)))) then 
            image_buffer0_6_we0 <= ap_const_logic_1;
        else 
            image_buffer0_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_7_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_7_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_7_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_7_address0 <= grp_computeHistogram0_fu_955_image_buffer_7_address0;
        else 
            image_buffer0_7_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_7_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_7_ce0 <= grp_computeHistogram0_fu_955_image_buffer_7_ce0;
        else 
            image_buffer0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_7_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_7_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_7_ce1 <= grp_computeHistogram0_fu_955_image_buffer_7_ce1;
        else 
            image_buffer0_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_7_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_7)))) then 
            image_buffer0_7_we0 <= ap_const_logic_1;
        else 
            image_buffer0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_8_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_8_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_8_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_8_address0 <= grp_computeHistogram0_fu_955_image_buffer_8_address0;
        else 
            image_buffer0_8_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_8_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_8_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_8_ce0 <= grp_computeHistogram0_fu_955_image_buffer_8_ce0;
        else 
            image_buffer0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_8_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_8_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_8_ce1 <= grp_computeHistogram0_fu_955_image_buffer_8_ce1;
        else 
            image_buffer0_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_8_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_8)))) then 
            image_buffer0_8_we0 <= ap_const_logic_1;
        else 
            image_buffer0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_9_address0_assign_proc : process(ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_9_address0, ap_CS_fsm_state54, tmp_41_fu_1227_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter23)) then 
            image_buffer0_9_address0 <= tmp_41_fu_1227_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_9_address0 <= grp_computeHistogram0_fu_955_image_buffer_9_address0;
        else 
            image_buffer0_9_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer0_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp0_iter23, grp_computeHistogram0_fu_955_image_buffer_9_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23))) then 
            image_buffer0_9_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_9_ce0 <= grp_computeHistogram0_fu_955_image_buffer_9_ce0;
        else 
            image_buffer0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_9_ce1_assign_proc : process(grp_computeHistogram0_fu_955_image_buffer_9_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer0_9_ce1 <= grp_computeHistogram0_fu_955_image_buffer_9_ce1;
        else 
            image_buffer0_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer0_9_we0_assign_proc : process(ap_enable_reg_pp0_iter15, tmp_45_reg_1651, ap_enable_reg_pp0_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631, ap_enable_reg_pp0_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter15) and not((tmp_45_reg_1651 = ap_const_lv1_0)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter23) and (ap_pipeline_reg_pp0_iter22_tmp_45_t_reg_1631 = ap_const_lv5_9)))) then 
            image_buffer0_9_we0 <= ap_const_logic_1;
        else 
            image_buffer0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_0_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_0_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_0_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_0_address0 <= grp_computeHistogram1_fu_987_image_buffer_0_address0;
        else 
            image_buffer1_0_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_0_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_0_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_0_ce0 <= grp_computeHistogram1_fu_987_image_buffer_0_ce0;
        else 
            image_buffer1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_0_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_0)))) then 
            image_buffer1_0_we0 <= ap_const_logic_1;
        else 
            image_buffer1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_10_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_10_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_10_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_10_address0 <= grp_computeHistogram1_fu_987_image_buffer_10_address0;
        else 
            image_buffer1_10_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_10_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_10_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_10_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_10_ce0 <= grp_computeHistogram1_fu_987_image_buffer_10_ce0;
        else 
            image_buffer1_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_10_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_10_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_10_ce1 <= grp_computeHistogram1_fu_987_image_buffer_10_ce1;
        else 
            image_buffer1_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_10_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_A)))) then 
            image_buffer1_10_we0 <= ap_const_logic_1;
        else 
            image_buffer1_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_11_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_11_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_11_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_11_address0 <= grp_computeHistogram1_fu_987_image_buffer_11_address0;
        else 
            image_buffer1_11_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_11_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_11_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_11_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_11_ce0 <= grp_computeHistogram1_fu_987_image_buffer_11_ce0;
        else 
            image_buffer1_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_11_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_11_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_11_ce1 <= grp_computeHistogram1_fu_987_image_buffer_11_ce1;
        else 
            image_buffer1_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_11_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_B)))) then 
            image_buffer1_11_we0 <= ap_const_logic_1;
        else 
            image_buffer1_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_12_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_12_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_12_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_12_address0 <= grp_computeHistogram1_fu_987_image_buffer_12_address0;
        else 
            image_buffer1_12_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_12_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_12_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_12_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_12_ce0 <= grp_computeHistogram1_fu_987_image_buffer_12_ce0;
        else 
            image_buffer1_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_12_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_12_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_12_ce1 <= grp_computeHistogram1_fu_987_image_buffer_12_ce1;
        else 
            image_buffer1_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_12_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_C)))) then 
            image_buffer1_12_we0 <= ap_const_logic_1;
        else 
            image_buffer1_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_13_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_13_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_13_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_13_address0 <= grp_computeHistogram1_fu_987_image_buffer_13_address0;
        else 
            image_buffer1_13_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_13_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_13_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_13_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_13_ce0 <= grp_computeHistogram1_fu_987_image_buffer_13_ce0;
        else 
            image_buffer1_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_13_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_13_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_13_ce1 <= grp_computeHistogram1_fu_987_image_buffer_13_ce1;
        else 
            image_buffer1_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_13_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_D)))) then 
            image_buffer1_13_we0 <= ap_const_logic_1;
        else 
            image_buffer1_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_14_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_14_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_14_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_14_address0 <= grp_computeHistogram1_fu_987_image_buffer_14_address0;
        else 
            image_buffer1_14_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_14_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_14_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_14_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_14_ce0 <= grp_computeHistogram1_fu_987_image_buffer_14_ce0;
        else 
            image_buffer1_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_14_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_14_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_14_ce1 <= grp_computeHistogram1_fu_987_image_buffer_14_ce1;
        else 
            image_buffer1_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_14_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_E)))) then 
            image_buffer1_14_we0 <= ap_const_logic_1;
        else 
            image_buffer1_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_15_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_15_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_15_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_15_address0 <= grp_computeHistogram1_fu_987_image_buffer_15_address0;
        else 
            image_buffer1_15_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_15_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_15_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_15_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_15_ce0 <= grp_computeHistogram1_fu_987_image_buffer_15_ce0;
        else 
            image_buffer1_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_15_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_15_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_15_ce1 <= grp_computeHistogram1_fu_987_image_buffer_15_ce1;
        else 
            image_buffer1_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_15_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_F)))) then 
            image_buffer1_15_we0 <= ap_const_logic_1;
        else 
            image_buffer1_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_16_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_16_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_16_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_16_address0 <= grp_computeHistogram1_fu_987_image_buffer_16_address0;
        else 
            image_buffer1_16_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_16_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_16_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_16_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_16_ce0 <= grp_computeHistogram1_fu_987_image_buffer_16_ce0;
        else 
            image_buffer1_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_16_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_16_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_16_ce1 <= grp_computeHistogram1_fu_987_image_buffer_16_ce1;
        else 
            image_buffer1_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_16_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_10)))) then 
            image_buffer1_16_we0 <= ap_const_logic_1;
        else 
            image_buffer1_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_17_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_17_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_17_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_17_address0 <= grp_computeHistogram1_fu_987_image_buffer_17_address0;
        else 
            image_buffer1_17_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_17_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_17_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_17_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_17_ce0 <= grp_computeHistogram1_fu_987_image_buffer_17_ce0;
        else 
            image_buffer1_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_17_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_0)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_1)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_2)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_3)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_4)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_5)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_6)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_7)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_8)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_9)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_A)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_B)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_C)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_D)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_E)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_F)) and not((ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_10))))) then 
            image_buffer1_17_we0 <= ap_const_logic_1;
        else 
            image_buffer1_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_1_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_1_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_1_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_1_address0 <= grp_computeHistogram1_fu_987_image_buffer_1_address0;
        else 
            image_buffer1_1_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_1_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_1_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_1_ce0 <= grp_computeHistogram1_fu_987_image_buffer_1_ce0;
        else 
            image_buffer1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_1_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_1_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_1_ce1 <= grp_computeHistogram1_fu_987_image_buffer_1_ce1;
        else 
            image_buffer1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_1_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_1)))) then 
            image_buffer1_1_we0 <= ap_const_logic_1;
        else 
            image_buffer1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_2_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_2_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_2_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_2_address0 <= grp_computeHistogram1_fu_987_image_buffer_2_address0;
        else 
            image_buffer1_2_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_2_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_2_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_2_ce0 <= grp_computeHistogram1_fu_987_image_buffer_2_ce0;
        else 
            image_buffer1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_2_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_2_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_2_ce1 <= grp_computeHistogram1_fu_987_image_buffer_2_ce1;
        else 
            image_buffer1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_2_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_2)))) then 
            image_buffer1_2_we0 <= ap_const_logic_1;
        else 
            image_buffer1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_3_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_3_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_3_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_3_address0 <= grp_computeHistogram1_fu_987_image_buffer_3_address0;
        else 
            image_buffer1_3_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_3_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_3_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_3_ce0 <= grp_computeHistogram1_fu_987_image_buffer_3_ce0;
        else 
            image_buffer1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_3_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_3_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_3_ce1 <= grp_computeHistogram1_fu_987_image_buffer_3_ce1;
        else 
            image_buffer1_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_3_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_3)))) then 
            image_buffer1_3_we0 <= ap_const_logic_1;
        else 
            image_buffer1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_4_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_4_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_4_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_4_address0 <= grp_computeHistogram1_fu_987_image_buffer_4_address0;
        else 
            image_buffer1_4_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_4_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_4_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_4_ce0 <= grp_computeHistogram1_fu_987_image_buffer_4_ce0;
        else 
            image_buffer1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_4_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_4_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_4_ce1 <= grp_computeHistogram1_fu_987_image_buffer_4_ce1;
        else 
            image_buffer1_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_4_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_4)))) then 
            image_buffer1_4_we0 <= ap_const_logic_1;
        else 
            image_buffer1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_5_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_5_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_5_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_5_address0 <= grp_computeHistogram1_fu_987_image_buffer_5_address0;
        else 
            image_buffer1_5_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_5_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_5_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_5_ce0 <= grp_computeHistogram1_fu_987_image_buffer_5_ce0;
        else 
            image_buffer1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_5_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_5_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_5_ce1 <= grp_computeHistogram1_fu_987_image_buffer_5_ce1;
        else 
            image_buffer1_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_5_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_5)))) then 
            image_buffer1_5_we0 <= ap_const_logic_1;
        else 
            image_buffer1_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_6_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_6_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_6_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_6_address0 <= grp_computeHistogram1_fu_987_image_buffer_6_address0;
        else 
            image_buffer1_6_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_6_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_6_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_6_ce0 <= grp_computeHistogram1_fu_987_image_buffer_6_ce0;
        else 
            image_buffer1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_6_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_6_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_6_ce1 <= grp_computeHistogram1_fu_987_image_buffer_6_ce1;
        else 
            image_buffer1_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_6_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_6)))) then 
            image_buffer1_6_we0 <= ap_const_logic_1;
        else 
            image_buffer1_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_7_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_7_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_7_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_7_address0 <= grp_computeHistogram1_fu_987_image_buffer_7_address0;
        else 
            image_buffer1_7_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_7_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_7_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_7_ce0 <= grp_computeHistogram1_fu_987_image_buffer_7_ce0;
        else 
            image_buffer1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_7_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_7_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_7_ce1 <= grp_computeHistogram1_fu_987_image_buffer_7_ce1;
        else 
            image_buffer1_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_7_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_7)))) then 
            image_buffer1_7_we0 <= ap_const_logic_1;
        else 
            image_buffer1_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_8_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_8_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_8_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_8_address0 <= grp_computeHistogram1_fu_987_image_buffer_8_address0;
        else 
            image_buffer1_8_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_8_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_8_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_8_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_8_ce0 <= grp_computeHistogram1_fu_987_image_buffer_8_ce0;
        else 
            image_buffer1_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_8_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_8_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_8_ce1 <= grp_computeHistogram1_fu_987_image_buffer_8_ce1;
        else 
            image_buffer1_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_8_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_8)))) then 
            image_buffer1_8_we0 <= ap_const_logic_1;
        else 
            image_buffer1_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_9_address0_assign_proc : process(ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_9_address0, ap_CS_fsm_state54, tmp_46_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp1_iter23)) then 
            image_buffer1_9_address0 <= tmp_46_fu_1399_p1(6 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_9_address0 <= grp_computeHistogram1_fu_987_image_buffer_9_address0;
        else 
            image_buffer1_9_address0 <= "XXXXXX";
        end if; 
    end process;


    image_buffer1_9_ce0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_enable_reg_pp1_iter23, grp_computeHistogram1_fu_987_image_buffer_9_ce0, ap_CS_fsm_state54)
    begin
        if ((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23))) then 
            image_buffer1_9_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_9_ce0 <= grp_computeHistogram1_fu_987_image_buffer_9_ce0;
        else 
            image_buffer1_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_9_ce1_assign_proc : process(grp_computeHistogram1_fu_987_image_buffer_9_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            image_buffer1_9_ce1 <= grp_computeHistogram1_fu_987_image_buffer_9_ce1;
        else 
            image_buffer1_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    image_buffer1_9_we0_assign_proc : process(ap_enable_reg_pp1_iter15, tmp_50_reg_1728, ap_enable_reg_pp1_iter22, INPUT_IMAGE_RVALID, ap_sig_ioackin_INPUT_IMAGE_ARREADY, ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708, ap_enable_reg_pp1_iter23)
    begin
        if (((not((((ap_const_logic_1 = ap_enable_reg_pp1_iter15) and not((ap_const_lv1_0 = tmp_50_reg_1728)) and (ap_const_logic_0 = ap_sig_ioackin_INPUT_IMAGE_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter22) and (INPUT_IMAGE_RVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter23) and (ap_pipeline_reg_pp1_iter22_tmp_52_t_reg_1708 = ap_const_lv5_9)))) then 
            image_buffer1_9_we0 <= ap_const_logic_1;
        else 
            image_buffer1_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    indvar1_cast_fu_1335_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp1_iter7_indvar1_mid2_reg_1674),7));
    indvar1_mid2_fu_1275_p3 <= 
        ap_const_lv6_0 when (exitcond1_fu_1269_p2(0) = '1') else 
        indvar1_reg_920;
    indvar_cast_fu_1151_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter7_indvar_mid2_reg_1597),7));

    indvar_flatten8_phi_fu_901_p4_assign_proc : process(indvar_flatten8_reg_897, ap_CS_fsm_pp1_stage0, exitcond_flatten1_reg_1665, indvar_flatten_next9_reg_1669, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1665))) then 
            indvar_flatten8_phi_fu_901_p4 <= indvar_flatten_next9_reg_1669;
        else 
            indvar_flatten8_phi_fu_901_p4 <= indvar_flatten8_reg_897;
        end if; 
    end process;

    indvar_flatten_next9_fu_1263_p2 <= std_logic_vector(unsigned(indvar_flatten8_phi_fu_901_p4) + unsigned(ap_const_lv10_1));
    indvar_flatten_next_fu_1087_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_867_p4) + unsigned(ap_const_lv10_1));

    indvar_flatten_phi_fu_867_p4_assign_proc : process(indvar_flatten_reg_863, ap_CS_fsm_pp0_stage0, exitcond_flatten_reg_1588, indvar_flatten_next_reg_1592, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1588))) then 
            indvar_flatten_phi_fu_867_p4 <= indvar_flatten_next_reg_1592;
        else 
            indvar_flatten_phi_fu_867_p4 <= indvar_flatten_reg_863;
        end if; 
    end process;

    indvar_mid2_fu_1099_p3 <= 
        ap_const_lv6_0 when (exitcond_fu_1093_p2(0) = '1') else 
        indvar_reg_886;
    indvar_next1_fu_1297_p2 <= std_logic_vector(unsigned(indvar1_mid2_fu_1275_p3) + unsigned(ap_const_lv6_1));
    indvar_next_fu_1121_p2 <= std_logic_vector(unsigned(indvar_mid2_fu_1099_p3) + unsigned(ap_const_lv6_1));
    normalized0_V_address0 <= tmp_1_i_fu_1478_p1(7 - 1 downto 0);

    normalized0_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            normalized0_V_ce0 <= ap_const_logic_1;
        else 
            normalized0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    normalized0_V_ce1_assign_proc : process(ap_CS_fsm_state56, grp_normalizeHisto0_fu_1019_normalized_V_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            normalized0_V_ce1 <= grp_normalizeHisto0_fu_1019_normalized_V_ce1;
        else 
            normalized0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    normalized0_V_we1_assign_proc : process(ap_CS_fsm_state56, grp_normalizeHisto0_fu_1019_normalized_V_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            normalized0_V_we1 <= grp_normalizeHisto0_fu_1019_normalized_V_we1;
        else 
            normalized0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    normalized1_V_address0 <= tmp_1_i_fu_1478_p1(7 - 1 downto 0);

    normalized1_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            normalized1_V_ce0 <= ap_const_logic_1;
        else 
            normalized1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    normalized1_V_ce1_assign_proc : process(ap_CS_fsm_state56, grp_normalizeHisto1_fu_1026_normalized_V_ce1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            normalized1_V_ce1 <= grp_normalizeHisto1_fu_1026_normalized_V_ce1;
        else 
            normalized1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    normalized1_V_we1_assign_proc : process(ap_CS_fsm_state56, grp_normalizeHisto1_fu_1026_normalized_V_we1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            normalized1_V_we1 <= grp_normalizeHisto1_fu_1026_normalized_V_we1;
        else 
            normalized1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    offset_assign_cast_fu_1448_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_1438_p4),30));
        p_cast_cast_fu_1525_p1 <= std_logic_vector(resize(signed(tmp_44_reg_1827),26));

    p_shl4_cast_mid2_fu_1147_p1 <= std_logic_vector(resize(unsigned(p_shl4_cast_mid2_v_fu_1140_p3),7));
    p_shl4_cast_mid2_v_fu_1140_p3 <= (ap_pipeline_reg_pp0_iter7_tmp_mid2_v_v_reg_1602 & ap_const_lv1_0);
    p_shl5_mid2_fu_1317_p3 <= (ap_pipeline_reg_pp1_iter7_p_sum2_cast_mid2_v_v_s_reg_1679 & ap_const_lv5_0);
    p_shl6_cast_mid2_fu_1331_p1 <= std_logic_vector(resize(unsigned(p_shl6_cast_mid2_v_fu_1324_p3),7));
    p_shl6_cast_mid2_v_fu_1324_p3 <= (ap_pipeline_reg_pp1_iter7_p_sum2_cast_mid2_v_v_s_reg_1679 & ap_const_lv1_0);
    p_shl_mid2_fu_1133_p3 <= (ap_pipeline_reg_pp0_iter7_tmp_mid2_v_v_reg_1602 & ap_const_lv5_0);
        p_sum1_cast_mid2_cast_fu_1204_p1 <= std_logic_vector(resize(signed(p_sum1_cast_mid2_v_reg_1635),34));

    p_sum1_cast_mid2_v_fu_1199_p2 <= std_logic_vector(signed(tmp_35_cast_reg_1582) + signed(p_sum1_cast_mid2_v_v_fu_1195_p1));
        p_sum1_cast_mid2_v_v_fu_1195_p1 <= std_logic_vector(resize(signed(grp_fu_1173_p2),33));

    p_sum2_cast_mid2_v_fu_1374_p2 <= std_logic_vector(signed(tmp3_cast_reg_1660) + signed(p_sum2_cast_mid2_v_v_fu_1371_p1));
        p_sum2_cast_mid2_v_v_fu_1371_p1 <= std_logic_vector(resize(signed(p_sum2_cast_mid2_v_v_2_reg_1712),34));

    p_sum2_cast_mid2_v_v_s_fu_1289_p3 <= 
        i_1_fu_1283_p2 when (exitcond1_fu_1269_p2(0) = '1') else 
        i4_phi_fu_913_p4;

    specs_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state55, ap_CS_fsm_state65)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state65))) then 
            specs_address0 <= ap_const_lv64_3(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state55))) then 
            specs_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            specs_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif (((ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            specs_address0 <= ap_const_lv64_1(2 - 1 downto 0);
        else 
            specs_address0 <= "XX";
        end if; 
    end process;


    specs_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state55, ap_CS_fsm_state65)
    begin
        if ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state65)))) then 
            specs_ce0 <= ap_const_logic_1;
        else 
            specs_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        specs_d0 <= std_logic_vector(resize(signed(classify_0_reg_931),32));


    specs_we0_assign_proc : process(ap_CS_fsm_state65)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state65)))) then 
            specs_we0 <= ap_const_logic_1;
        else 
            specs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum0_address0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram0_fu_955_sum_address0, grp_normalizeHisto0_fu_1019_sum_address0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            sum0_address0 <= grp_normalizeHisto0_fu_1019_sum_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum0_address0 <= grp_computeHistogram0_fu_955_sum_address0;
        else 
            sum0_address0 <= "X";
        end if; 
    end process;


    sum0_ce0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram0_fu_955_sum_ce0, grp_normalizeHisto0_fu_1019_sum_ce0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            sum0_ce0 <= grp_normalizeHisto0_fu_1019_sum_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum0_ce0 <= grp_computeHistogram0_fu_955_sum_ce0;
        else 
            sum0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum0_ce1_assign_proc : process(grp_computeHistogram0_fu_955_sum_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum0_ce1 <= grp_computeHistogram0_fu_955_sum_ce1;
        else 
            sum0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum0_we0_assign_proc : process(grp_computeHistogram0_fu_955_sum_we0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum0_we0 <= grp_computeHistogram0_fu_955_sum_we0;
        else 
            sum0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum0_we1_assign_proc : process(grp_computeHistogram0_fu_955_sum_we1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum0_we1 <= grp_computeHistogram0_fu_955_sum_we1;
        else 
            sum0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sum1_address0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram1_fu_987_sum_address0, grp_normalizeHisto1_fu_1026_sum_address0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            sum1_address0 <= grp_normalizeHisto1_fu_1026_sum_address0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum1_address0 <= grp_computeHistogram1_fu_987_sum_address0;
        else 
            sum1_address0 <= "X";
        end if; 
    end process;


    sum1_ce0_assign_proc : process(ap_CS_fsm_state56, grp_computeHistogram1_fu_987_sum_ce0, grp_normalizeHisto1_fu_1026_sum_ce0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state56))) then 
            sum1_ce0 <= grp_normalizeHisto1_fu_1026_sum_ce0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum1_ce0 <= grp_computeHistogram1_fu_987_sum_ce0;
        else 
            sum1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum1_ce1_assign_proc : process(grp_computeHistogram1_fu_987_sum_ce1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum1_ce1 <= grp_computeHistogram1_fu_987_sum_ce1;
        else 
            sum1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sum1_we0_assign_proc : process(grp_computeHistogram1_fu_987_sum_we0, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum1_we0 <= grp_computeHistogram1_fu_987_sum_we0;
        else 
            sum1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum1_we1_assign_proc : process(grp_computeHistogram1_fu_987_sum_we1, ap_CS_fsm_state54)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state54))) then 
            sum1_we1 <= grp_computeHistogram1_fu_987_sum_we1;
        else 
            sum1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sum_fu_1528_p2 <= std_logic_vector(unsigned(classify_0_reg_931) + unsigned(p_cast_cast_fu_1525_p1));
    tmp2_cast_fu_1160_p1 <= std_logic_vector(resize(unsigned(tmp2_fu_1154_p2),10));
    tmp2_fu_1154_p2 <= std_logic_vector(unsigned(p_shl4_cast_mid2_fu_1147_p1) + unsigned(indvar_cast_fu_1151_p1));
        tmp3_cast_fu_1253_p1 <= std_logic_vector(resize(signed(tmp3_fu_1248_p2),34));

    tmp3_fu_1248_p2 <= std_logic_vector(signed(tmp_35_cast_reg_1582) + signed(ap_const_lv33_21));
    tmp6_cast_fu_1344_p1 <= std_logic_vector(resize(unsigned(tmp6_fu_1338_p2),10));
    tmp6_fu_1338_p2 <= std_logic_vector(unsigned(p_shl6_cast_mid2_fu_1331_p1) + unsigned(indvar1_cast_fu_1335_p1));
    tmp7_cast_fu_1494_p1 <= std_logic_vector(resize(unsigned(tmp7_reg_1757),30));
    tmp7_fu_1468_p2 <= std_logic_vector(unsigned(i_i_cast_fu_1464_p1) + unsigned(ap_const_lv8_48));
    tmp_1_i_fu_1478_p1 <= std_logic_vector(resize(unsigned(i_i_reg_943),64));
    tmp_2_i_fu_1484_p2 <= std_logic_vector(unsigned(offset_assign_cast_reg_1742) + unsigned(i_i_cast9_fu_1474_p1));
    tmp_34_fu_1432_p2 <= std_logic_vector(unsigned(tmp_48_fu_1426_p2) + unsigned(tmp_47_fu_1420_p2));
        tmp_35_cast_fu_1077_p1 <= std_logic_vector(resize(signed(specs_q0),33));

    tmp_38_fu_1164_p2 <= std_logic_vector(unsigned(tmp2_cast_fu_1160_p1) + unsigned(p_shl_mid2_fu_1133_p3));
    tmp_3_i_fu_1489_p1 <= std_logic_vector(resize(unsigned(tmp_2_i_fu_1484_p2),64));
    tmp_41_fu_1227_p1 <= std_logic_vector(resize(unsigned(tmp_40_reg_1655),64));
    tmp_42_fu_1438_p4 <= tmp_34_fu_1432_p2(31 downto 3);
    tmp_43_fu_1348_p2 <= std_logic_vector(unsigned(tmp6_cast_fu_1344_p1) + unsigned(p_shl5_mid2_fu_1317_p3));
    tmp_45_fu_1222_p2 <= "1" when (tmp_reg_1640 = ap_const_lv10_0) else "0";
    tmp_46_fu_1399_p1 <= std_logic_vector(resize(unsigned(tmp_s_reg_1732),64));
    tmp_47_fu_1420_p2 <= std_logic_vector(shift_left(unsigned(specs_q0),to_integer(unsigned('0' & ap_const_lv32_A(31-1 downto 0)))));
    tmp_48_fu_1426_p2 <= std_logic_vector(shift_left(unsigned(specs_q0),to_integer(unsigned('0' & ap_const_lv32_7(31-1 downto 0)))));
    tmp_50_fu_1394_p2 <= "1" when (tmp_49_reg_1723 = ap_const_lv10_0) else "0";
    tmp_8_i_fu_1497_p2 <= std_logic_vector(unsigned(tmp7_cast_fu_1494_p1) + unsigned(offset_assign_cast_reg_1742));
    tmp_9_i_fu_1502_p1 <= std_logic_vector(resize(unsigned(tmp_8_i_fu_1497_p2),64));
        tmp_cast_fu_1073_p1 <= std_logic_vector(resize(signed(image0),34));

    tmp_i_fu_1452_p2 <= "1" when (i_i_phi_fu_947_p4 = ap_const_lv7_48) else "0";
    tmp_mid2_v_v_fu_1113_p3 <= 
        i_s_fu_1107_p2 when (exitcond_fu_1093_p2(0) = '1') else 
        i_phi_fu_879_p4;
    weights_address0 <= tmp_3_i_fu_1489_p1(11 - 1 downto 0);
    weights_address1 <= tmp_9_i_fu_1502_p1(11 - 1 downto 0);

    weights_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            weights_ce0 <= ap_const_logic_1;
        else 
            weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1))) then 
            weights_ce1 <= ap_const_logic_1;
        else 
            weights_ce1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
