-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity normalizeHisto1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sum_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    sum_ce0 : OUT STD_LOGIC;
    sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    descriptor_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    descriptor_V_ce0 : OUT STD_LOGIC;
    descriptor_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
    normalized_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    normalized_V_ce1 : OUT STD_LOGIC;
    normalized_V_we1 : OUT STD_LOGIC;
    normalized_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of normalizeHisto1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_66 : STD_LOGIC_VECTOR (9 downto 0) := "0001100110";
    constant ap_const_lv10_99 : STD_LOGIC_VECTOR (9 downto 0) := "0010011001";
    constant ap_const_lv10_CC : STD_LOGIC_VECTOR (9 downto 0) := "0011001100";
    constant ap_const_lv10_100 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_const_lv10_133 : STD_LOGIC_VECTOR (9 downto 0) := "0100110011";
    constant ap_const_lv10_166 : STD_LOGIC_VECTOR (9 downto 0) := "0101100110";
    constant ap_const_lv10_199 : STD_LOGIC_VECTOR (9 downto 0) := "0110011001";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv65_1C71C71C8 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000111000111000111000111000111001000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv10_33 : STD_LOGIC_VECTOR (9 downto 0) := "0000110011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_210 : STD_LOGIC_VECTOR (6 downto 0);
    signal blkIdx_reg_221 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_232 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_249_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal i_mid2_fu_261_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter2_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter3_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter4_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter5_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter6_i_mid2_reg_607 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_275_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_v_reg_612 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_283_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter6_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter7_tmp_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_287_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_fu_318_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_reg_639 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_reg_644 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_5_reg_650 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_4_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_reg_660 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_pipeline_reg_pp0_iter9_tmp_4_reg_660 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_677 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_685 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_689 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_693 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_697 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_701 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_705 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal blkIdx_phi_fu_225_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid2_fu_293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal normalized_V_addr_6_gep_fu_147_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_5_gep_fu_156_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_4_gep_fu_165_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_3_gep_fu_174_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_2_gep_fu_183_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_1_gep_fu_192_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal normalized_V_addr_gep_fu_201_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal storemerge_cast_cast_fu_590_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal blkIdx_s_fu_269_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl1_cast_mid2_v_fu_307_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl1_cast_mid2_fu_314_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid2_v_fu_323_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_mid2_fu_330_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp1_cast_fu_344_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_347_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal op2_assign_fu_367_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_5_cast_fu_398_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal op2_assign_cast_fu_378_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_shl2_fu_408_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl2_cast_fu_415_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal average_cast8_fu_358_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_7_fu_419_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_s_fu_425_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_18_fu_435_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_5_cast2_fu_394_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal op2_assign_1_cast_fu_439_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal op2_assign_cast6_fu_374_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_9_fu_449_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_19_fu_455_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_20_fu_465_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal op2_assign_2_cast_fu_469_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl3_fu_479_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_shl3_cast_fu_486_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal average_cast7_fu_361_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_11_fu_490_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_21_fu_496_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal op2_assign_3_cast_fu_506_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_5_cast3_fu_390_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal average_cast_fu_364_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_14_fu_522_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_22_fu_528_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_23_fu_538_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal op2_assign_4_cast_fu_542_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_24_fu_552_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_5_cast4_fu_386_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal op2_assign_5_cast_fu_561_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_25_fu_571_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_5_cast5_fu_382_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal op2_assign_6_cast_fu_580_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_301_p10 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_condition_199 : BOOLEAN;
    signal ap_condition_203 : BOOLEAN;
    signal ap_condition_207 : BOOLEAN;
    signal ap_condition_211 : BOOLEAN;
    signal ap_condition_215 : BOOLEAN;
    signal ap_condition_219 : BOOLEAN;

    component hog_mul_34ns_32nsjbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (33 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;



begin
    hog_mul_34ns_32nsjbC_x_U49 : component hog_mul_34ns_32nsjbC
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 34,
        din1_WIDTH => 32,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_301_p0,
        din1 => grp_fu_301_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_301_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_243_p2 = ap_const_lv1_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_243_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((exitcond_flatten_fu_243_p2 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
            end if;
        end if;
    end process;


    blkIdx_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_598 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
                blkIdx_reg_221 <= tmp_mid2_v_reg_612;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                blkIdx_reg_221 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_243_p2 = ap_const_lv1_0))) then 
                i_reg_232 <= i_1_fu_287_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_232 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_243_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_210 <= indvar_flatten_next_fu_249_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_210 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_598 <= exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter1_i_mid2_reg_607 <= i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter1_tmp_reg_618 <= tmp_reg_618;
                exitcond_flatten_reg_598 <= exitcond_flatten_fu_243_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_const_boolean_1)) then
                ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter2_i_mid2_reg_607 <= ap_pipeline_reg_pp0_iter1_i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter2_tmp_reg_618 <= ap_pipeline_reg_pp0_iter1_tmp_reg_618;
                ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter3_i_mid2_reg_607 <= ap_pipeline_reg_pp0_iter2_i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter3_tmp_reg_618 <= ap_pipeline_reg_pp0_iter2_tmp_reg_618;
                ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter4_i_mid2_reg_607 <= ap_pipeline_reg_pp0_iter3_i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter4_tmp_reg_618 <= ap_pipeline_reg_pp0_iter3_tmp_reg_618;
                ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter5_i_mid2_reg_607 <= ap_pipeline_reg_pp0_iter4_i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter5_tmp_reg_618 <= ap_pipeline_reg_pp0_iter4_tmp_reg_618;
                ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter6_i_mid2_reg_607 <= ap_pipeline_reg_pp0_iter5_i_mid2_reg_607;
                ap_pipeline_reg_pp0_iter6_tmp_reg_618 <= ap_pipeline_reg_pp0_iter5_tmp_reg_618;
                ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_598;
                ap_pipeline_reg_pp0_iter7_tmp_reg_618 <= ap_pipeline_reg_pp0_iter6_tmp_reg_618;
                ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_598 <= ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_598;
                    ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(6 downto 0) <= tmp_4_reg_660(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_243_p2 = ap_const_lv1_0))) then
                i_mid2_reg_607 <= i_mid2_fu_261_p3;
                tmp_reg_618 <= tmp_fu_283_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_598 = ap_const_lv1_0)) then
                mul_reg_644 <= grp_fu_301_p2;
                    tmp_4_reg_660(6 downto 0) <= tmp_4_fu_353_p1(6 downto 0);
                tmp_5_reg_650 <= grp_fu_301_p2(64 downto 38);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_598 = ap_const_lv1_0)) then
                tmp1_reg_639 <= tmp1_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2))) then
                tmp_10_reg_685 <= tmp_10_fu_473_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2) and (ap_const_lv1_0 = tmp_10_fu_473_p2))) then
                tmp_12_reg_689 <= tmp_12_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2) and (ap_const_lv1_0 = tmp_10_fu_473_p2) and (ap_const_lv1_0 = tmp_12_fu_510_p2))) then
                tmp_13_reg_693 <= tmp_13_fu_516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2) and (ap_const_lv1_0 = tmp_10_fu_473_p2) and (ap_const_lv1_0 = tmp_12_fu_510_p2) and (ap_const_lv1_0 = tmp_13_fu_516_p2))) then
                tmp_15_reg_697 <= tmp_15_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2) and (ap_const_lv1_0 = tmp_10_fu_473_p2) and (ap_const_lv1_0 = tmp_12_fu_510_p2) and (ap_const_lv1_0 = tmp_13_fu_516_p2) and (ap_const_lv1_0 = tmp_15_fu_546_p2))) then
                tmp_16_reg_701 <= tmp_16_fu_565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_fu_402_p2) and (ap_const_lv1_0 = tmp_8_fu_443_p2) and (ap_const_lv1_0 = tmp_10_fu_473_p2) and (ap_const_lv1_0 = tmp_12_fu_510_p2) and (ap_const_lv1_0 = tmp_13_fu_516_p2) and (ap_const_lv1_0 = tmp_15_fu_546_p2) and (ap_const_lv1_0 = tmp_16_fu_565_p2))) then
                tmp_17_reg_705 <= tmp_17_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_598 = ap_const_lv1_0)) then
                tmp_6_reg_677 <= tmp_6_fu_402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = tmp_6_fu_402_p2)) then
                tmp_8_reg_681 <= tmp_8_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_fu_243_p2 = ap_const_lv1_0))) then
                tmp_mid2_v_reg_612 <= tmp_mid2_v_fu_275_p3;
            end if;
        end if;
    end process;
    tmp_4_reg_660(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_flatten_fu_243_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter9)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_243_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((exitcond_flatten_fu_243_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2 downto 2);

    ap_condition_199_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693, tmp_15_reg_697, tmp_16_reg_701)
    begin
                ap_condition_199 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and (ap_const_lv1_0 = tmp_16_reg_701));
    end process;


    ap_condition_203_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693, tmp_15_reg_697, tmp_16_reg_701)
    begin
                ap_condition_203 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and not((ap_const_lv1_0 = tmp_16_reg_701)));
    end process;


    ap_condition_207_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693, tmp_15_reg_697)
    begin
                ap_condition_207 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and not((ap_const_lv1_0 = tmp_15_reg_697)));
    end process;


    ap_condition_211_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693)
    begin
                ap_condition_211 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and not((ap_const_lv1_0 = tmp_13_reg_693)));
    end process;


    ap_condition_215_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689)
    begin
                ap_condition_215 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and not((ap_const_lv1_0 = tmp_12_reg_689)));
    end process;


    ap_condition_219_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685)
    begin
                ap_condition_219 <= ((ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and not((ap_const_lv1_0 = tmp_10_reg_685)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    average_cast7_fu_361_p1 <= std_logic_vector(resize(unsigned(tmp_5_reg_650),30));
    average_cast8_fu_358_p1 <= std_logic_vector(resize(unsigned(tmp_5_reg_650),31));
    average_cast_fu_364_p1 <= std_logic_vector(resize(unsigned(tmp_5_reg_650),28));

    blkIdx_phi_fu_225_p4_assign_proc : process(blkIdx_reg_221, exitcond_flatten_reg_598, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_612, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_598 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            blkIdx_phi_fu_225_p4 <= tmp_mid2_v_reg_612;
        else 
            blkIdx_phi_fu_225_p4 <= blkIdx_reg_221;
        end if; 
    end process;

    blkIdx_s_fu_269_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(blkIdx_phi_fu_225_p4));
    descriptor_V_address0 <= tmp_4_fu_353_p1(7 - 1 downto 0);

    descriptor_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter8)) then 
            descriptor_V_ce0 <= ap_const_logic_1;
        else 
            descriptor_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_flatten_fu_243_p2 <= "1" when (indvar_flatten_reg_210 = ap_const_lv7_48) else "0";
    grp_fu_301_p0 <= ap_const_lv65_1C71C71C8(34 - 1 downto 0);
    grp_fu_301_p1 <= grp_fu_301_p10(32 - 1 downto 0);
    grp_fu_301_p10 <= std_logic_vector(resize(unsigned(sum_q0),65));
    i_1_fu_287_p2 <= std_logic_vector(unsigned(i_mid2_fu_261_p3) + unsigned(ap_const_lv6_1));
    i_mid2_fu_261_p3 <= 
        ap_const_lv6_0 when (tmp_2_fu_255_p2(0) = '1') else 
        i_reg_232;
    indvar_flatten_next_fu_249_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_210) + unsigned(ap_const_lv7_1));
    normalized_V_addr_1_gep_fu_192_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_2_gep_fu_183_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_3_gep_fu_174_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_4_gep_fu_165_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_5_gep_fu_156_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_6_gep_fu_147_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
    normalized_V_addr_gep_fu_201_p3 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);

    normalized_V_address1_assign_proc : process(ap_pipeline_reg_pp0_iter9_tmp_4_reg_660, tmp_6_reg_677, tmp_8_reg_681, ap_enable_reg_pp0_iter10, normalized_V_addr_6_gep_fu_147_p3, normalized_V_addr_5_gep_fu_156_p3, normalized_V_addr_4_gep_fu_165_p3, normalized_V_addr_3_gep_fu_174_p3, normalized_V_addr_2_gep_fu_183_p3, normalized_V_addr_1_gep_fu_192_p3, normalized_V_addr_gep_fu_201_p3, ap_condition_199, ap_condition_203, ap_condition_207, ap_condition_211, ap_condition_215, ap_condition_219)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter10)) then
            if (not((ap_const_lv1_0 = tmp_6_reg_677))) then 
                normalized_V_address1 <= normalized_V_addr_gep_fu_201_p3;
            elsif (((ap_const_lv1_0 = tmp_6_reg_677) and not((ap_const_lv1_0 = tmp_8_reg_681)))) then 
                normalized_V_address1 <= normalized_V_addr_1_gep_fu_192_p3;
            elsif ((ap_condition_219 = ap_const_boolean_1)) then 
                normalized_V_address1 <= normalized_V_addr_2_gep_fu_183_p3;
            elsif ((ap_condition_215 = ap_const_boolean_1)) then 
                normalized_V_address1 <= normalized_V_addr_3_gep_fu_174_p3;
            elsif ((ap_condition_211 = ap_const_boolean_1)) then 
                normalized_V_address1 <= normalized_V_addr_4_gep_fu_165_p3;
            elsif ((ap_condition_207 = ap_const_boolean_1)) then 
                normalized_V_address1 <= normalized_V_addr_5_gep_fu_156_p3;
            elsif ((ap_condition_203 = ap_const_boolean_1)) then 
                normalized_V_address1 <= normalized_V_addr_6_gep_fu_147_p3;
            elsif ((ap_condition_199 = ap_const_boolean_1)) then 
                normalized_V_address1 <= ap_pipeline_reg_pp0_iter9_tmp_4_reg_660(7 - 1 downto 0);
            else 
                normalized_V_address1 <= "XXXXXXX";
            end if;
        else 
            normalized_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    normalized_V_ce1_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693, tmp_15_reg_697, tmp_16_reg_701, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and (ap_const_lv1_0 = tmp_16_reg_701)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and not((ap_const_lv1_0 = tmp_16_reg_701))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and not((ap_const_lv1_0 = tmp_15_reg_697))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and not((ap_const_lv1_0 = tmp_13_reg_693))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and not((ap_const_lv1_0 = tmp_12_reg_689))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and not((ap_const_lv1_0 = tmp_10_reg_685))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and not((ap_const_lv1_0 = tmp_8_reg_681))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and not((ap_const_lv1_0 = tmp_6_reg_677))))) then 
            normalized_V_ce1 <= ap_const_logic_1;
        else 
            normalized_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    normalized_V_d1_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, ap_enable_reg_pp0_iter10, storemerge_cast_cast_fu_590_p3, ap_condition_199, ap_condition_203, ap_condition_207, ap_condition_211, ap_condition_215, ap_condition_219)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter10)) then
            if (not((ap_const_lv1_0 = tmp_6_reg_677))) then 
                normalized_V_d1 <= ap_const_lv10_199;
            elsif (((ap_const_lv1_0 = tmp_6_reg_677) and not((ap_const_lv1_0 = tmp_8_reg_681)))) then 
                normalized_V_d1 <= ap_const_lv10_166;
            elsif ((ap_condition_219 = ap_const_boolean_1)) then 
                normalized_V_d1 <= ap_const_lv10_133;
            elsif ((ap_condition_215 = ap_const_boolean_1)) then 
                normalized_V_d1 <= ap_const_lv10_100;
            elsif ((ap_condition_211 = ap_const_boolean_1)) then 
                normalized_V_d1 <= ap_const_lv10_CC;
            elsif ((ap_condition_207 = ap_const_boolean_1)) then 
                normalized_V_d1 <= ap_const_lv10_99;
            elsif ((ap_condition_203 = ap_const_boolean_1)) then 
                normalized_V_d1 <= ap_const_lv10_66;
            elsif ((ap_condition_199 = ap_const_boolean_1)) then 
                normalized_V_d1 <= storemerge_cast_cast_fu_590_p3;
            else 
                normalized_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            normalized_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    normalized_V_we1_assign_proc : process(tmp_6_reg_677, tmp_8_reg_681, tmp_10_reg_685, tmp_12_reg_689, tmp_13_reg_693, tmp_15_reg_697, tmp_16_reg_701, ap_enable_reg_pp0_iter10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and (ap_const_lv1_0 = tmp_16_reg_701)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and (ap_const_lv1_0 = tmp_15_reg_697) and not((ap_const_lv1_0 = tmp_16_reg_701))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and (ap_const_lv1_0 = tmp_13_reg_693) and not((ap_const_lv1_0 = tmp_15_reg_697))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and (ap_const_lv1_0 = tmp_12_reg_689) and not((ap_const_lv1_0 = tmp_13_reg_693))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and (ap_const_lv1_0 = tmp_10_reg_685) and not((ap_const_lv1_0 = tmp_12_reg_689))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and (ap_const_lv1_0 = tmp_8_reg_681) and not((ap_const_lv1_0 = tmp_10_reg_685))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and (ap_const_lv1_0 = tmp_6_reg_677) and not((ap_const_lv1_0 = tmp_8_reg_681))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter10) and not((ap_const_lv1_0 = tmp_6_reg_677))))) then 
            normalized_V_we1 <= ap_const_logic_1;
        else 
            normalized_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    op2_assign_1_cast_fu_439_p1 <= std_logic_vector(resize(unsigned(tmp_18_fu_435_p1),31));
    op2_assign_2_cast_fu_469_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_465_p1),31));
    op2_assign_3_cast_fu_506_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_496_p4),29));
    op2_assign_4_cast_fu_542_p1 <= std_logic_vector(resize(unsigned(tmp_23_fu_538_p1),31));
    op2_assign_5_cast_fu_561_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_552_p4),27));
    op2_assign_6_cast_fu_580_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_571_p4),26));
    op2_assign_cast6_fu_374_p1 <= std_logic_vector(resize(unsigned(op2_assign_fu_367_p3),31));
    op2_assign_cast_fu_378_p1 <= std_logic_vector(resize(unsigned(op2_assign_fu_367_p3),29));
    op2_assign_fu_367_p3 <= (tmp_5_reg_650 & ap_const_lv1_0);
    p_shl1_cast_mid2_fu_314_p1 <= std_logic_vector(resize(unsigned(p_shl1_cast_mid2_v_fu_307_p3),6));
    p_shl1_cast_mid2_v_fu_307_p3 <= (ap_pipeline_reg_pp0_iter6_tmp_reg_618 & ap_const_lv2_0);
    p_shl2_cast_fu_415_p1 <= std_logic_vector(resize(unsigned(p_shl2_fu_408_p3),31));
    p_shl2_fu_408_p3 <= (tmp_5_reg_650 & ap_const_lv3_0);
    p_shl3_cast_fu_486_p1 <= std_logic_vector(resize(unsigned(p_shl3_fu_479_p3),30));
    p_shl3_fu_479_p3 <= (tmp_5_reg_650 & ap_const_lv2_0);
    p_shl_cast_mid2_fu_330_p1 <= std_logic_vector(resize(unsigned(p_shl_cast_mid2_v_fu_323_p3),7));
    p_shl_cast_mid2_v_fu_323_p3 <= (ap_pipeline_reg_pp0_iter7_tmp_reg_618 & ap_const_lv5_0);
    storemerge_cast_cast_fu_590_p3 <= 
        ap_const_lv10_33 when (tmp_17_reg_705(0) = '1') else 
        ap_const_lv10_0;
    sum_address0 <= tmp_mid2_fu_293_p1(1 - 1 downto 0);

    sum_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            sum_ce0 <= ap_const_logic_1;
        else 
            sum_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_cast_fu_344_p1 <= std_logic_vector(resize(unsigned(tmp1_reg_639),7));
    tmp1_fu_318_p2 <= std_logic_vector(unsigned(ap_pipeline_reg_pp0_iter6_i_mid2_reg_607) + unsigned(p_shl1_cast_mid2_fu_314_p1));
    tmp_10_fu_473_p2 <= "1" when (signed(tmp_5_cast2_fu_394_p1) > signed(op2_assign_2_cast_fu_469_p1)) else "0";
    tmp_11_fu_490_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_486_p1) + unsigned(average_cast7_fu_361_p1));
    tmp_12_fu_510_p2 <= "1" when (signed(tmp_5_cast_fu_398_p1) > signed(op2_assign_3_cast_fu_506_p1)) else "0";
    tmp_13_fu_516_p2 <= "1" when (signed(tmp_5_cast3_fu_390_p1) > signed(average_cast_fu_364_p1)) else "0";
    tmp_14_fu_522_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_486_p1) - unsigned(average_cast7_fu_361_p1));
    tmp_15_fu_546_p2 <= "1" when (signed(tmp_5_cast2_fu_394_p1) > signed(op2_assign_4_cast_fu_542_p1)) else "0";
    tmp_16_fu_565_p2 <= "1" when (signed(tmp_5_cast4_fu_386_p1) > signed(op2_assign_5_cast_fu_561_p1)) else "0";
    tmp_17_fu_584_p2 <= "1" when (signed(tmp_5_cast5_fu_382_p1) > signed(op2_assign_6_cast_fu_580_p1)) else "0";
        tmp_18_fu_435_p1 <= std_logic_vector(resize(signed(tmp_s_fu_425_p4),30));

    tmp_19_fu_455_p4 <= tmp_9_fu_449_p2(30 downto 2);
        tmp_20_fu_465_p1 <= std_logic_vector(resize(signed(tmp_19_fu_455_p4),30));

    tmp_21_fu_496_p4 <= tmp_11_fu_490_p2(29 downto 2);
    tmp_22_fu_528_p4 <= tmp_14_fu_522_p2(29 downto 2);
        tmp_23_fu_538_p1 <= std_logic_vector(resize(signed(tmp_22_fu_528_p4),30));

    tmp_24_fu_552_p4 <= mul_reg_644(64 downto 39);
    tmp_25_fu_571_p4 <= mul_reg_644(64 downto 40);
    tmp_2_fu_255_p2 <= "1" when (i_reg_232 = ap_const_lv6_24) else "0";
    tmp_3_fu_347_p2 <= std_logic_vector(unsigned(p_shl_cast_mid2_fu_330_p1) + unsigned(tmp1_cast_fu_344_p1));
    tmp_4_fu_353_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_347_p2),64));
        tmp_5_cast2_fu_394_p1 <= std_logic_vector(resize(signed(descriptor_V_q0),31));

        tmp_5_cast3_fu_390_p1 <= std_logic_vector(resize(signed(descriptor_V_q0),28));

        tmp_5_cast4_fu_386_p1 <= std_logic_vector(resize(signed(descriptor_V_q0),27));

        tmp_5_cast5_fu_382_p1 <= std_logic_vector(resize(signed(descriptor_V_q0),26));

        tmp_5_cast_fu_398_p1 <= std_logic_vector(resize(signed(descriptor_V_q0),29));

    tmp_6_fu_402_p2 <= "1" when (signed(tmp_5_cast_fu_398_p1) > signed(op2_assign_cast_fu_378_p1)) else "0";
    tmp_7_fu_419_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_415_p1) - unsigned(average_cast8_fu_358_p1));
    tmp_8_fu_443_p2 <= "1" when (signed(tmp_5_cast2_fu_394_p1) > signed(op2_assign_1_cast_fu_439_p1)) else "0";
    tmp_9_fu_449_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_415_p1) - unsigned(op2_assign_cast6_fu_374_p1));
    tmp_fu_283_p1 <= tmp_mid2_v_fu_275_p3(1 - 1 downto 0);
    tmp_mid2_fu_293_p1 <= std_logic_vector(resize(unsigned(tmp_mid2_v_reg_612),64));
    tmp_mid2_v_fu_275_p3 <= 
        blkIdx_s_fu_269_p2 when (tmp_2_fu_255_p2(0) = '1') else 
        blkIdx_phi_fu_225_p4;
    tmp_s_fu_425_p4 <= tmp_7_fu_419_p2(30 downto 2);
end behav;
