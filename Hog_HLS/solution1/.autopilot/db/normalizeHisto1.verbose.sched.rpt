

================================================================
== Vivado HLS Report for 'normalizeHisto1'
================================================================
* Date:           Wed Jun 27 15:31:28 2018

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        Hog_HLS
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.00|      5.20|        0.75|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   83|   83|   83|   83|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   81|   81|        11|          1|          1|    72|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	13  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true
13 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_14 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecMemCore([72 x i10]* %normalized_V, [1 x i8]* @p_str, [12 x i8]* @p_str16, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_15 (5)  [1/1] 1.57ns  loc: src/c/hog.cpp:182
:1  br label %.preheader


 <State 2>: 5.03ns
ST_2: indvar_flatten (7)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i7 [ 0, %0 ], [ %indvar_flatten_next, %21 ]

ST_2: blkIdx (8)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader:1  %blkIdx = phi i2 [ 0, %0 ], [ %tmp_mid2_v, %21 ]

ST_2: i (9)  [1/1] 0.00ns
.preheader:2  %i = phi i6 [ 0, %0 ], [ %i_1, %21 ]

ST_2: exitcond_flatten (10)  [1/1] 1.97ns
.preheader:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -56

ST_2: indvar_flatten_next (11)  [1/1] 1.72ns
.preheader:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: StgValue_21 (12)  [1/1] 0.00ns
.preheader:5  br i1 %exitcond_flatten, label %22, label %.preheader.preheader

ST_2: tmp_2 (15)  [1/1] 1.94ns  loc: src/c/hog.cpp:183
.preheader.preheader:1  %tmp_2 = icmp eq i6 %i, -28

ST_2: i_mid2 (16)  [1/1] 1.37ns  loc: src/c/hog.cpp:183
.preheader.preheader:2  %i_mid2 = select i1 %tmp_2, i6 0, i6 %i

ST_2: blkIdx_s (17)  [1/1] 0.80ns  loc: src/c/hog.cpp:182
.preheader.preheader:3  %blkIdx_s = add i2 1, %blkIdx

ST_2: tmp_mid2_v (18)  [1/1] 1.37ns  loc: src/c/hog.cpp:186
.preheader.preheader:4  %tmp_mid2_v = select i1 %tmp_2, i2 %blkIdx_s, i2 %blkIdx

ST_2: tmp (20)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:6  %tmp = trunc i2 %tmp_mid2_v to i1

ST_2: i_1 (140)  [1/1] 1.72ns  loc: src/c/hog.cpp:183
:1  %i_1 = add i6 %i_mid2, 1


 <State 3>: 2.39ns
ST_3: tmp_mid2 (19)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:5  %tmp_mid2 = zext i2 %tmp_mid2_v to i64

ST_3: sum_addr (27)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:13  %sum_addr = getelementptr [2 x i32]* %sum, i64 0, i64 %tmp_mid2

ST_3: sum_load (28)  [2/2] 2.39ns  loc: src/c/hog.cpp:186
.preheader.preheader:14  %sum_load = load i32* %sum_addr, align 4


 <State 4>: 4.54ns
ST_4: sum_load (28)  [1/2] 2.39ns  loc: src/c/hog.cpp:186
.preheader.preheader:14  %sum_load = load i32* %sum_addr, align 4

ST_4: zext_cast (29)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:15  %zext_cast = zext i32 %sum_load to i65

ST_4: mul (30)  [7/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast


 <State 5>: 2.15ns
ST_5: mul (30)  [6/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast


 <State 6>: 2.15ns
ST_6: mul (30)  [5/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast


 <State 7>: 2.15ns
ST_7: mul (30)  [4/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast


 <State 8>: 2.15ns
ST_8: mul (30)  [3/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast


 <State 9>: 2.15ns
ST_9: p_shl1_cast_mid2_v (23)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:9  %p_shl1_cast_mid2_v = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 %tmp, i2 0)

ST_9: p_shl1_cast_mid2 (24)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:10  %p_shl1_cast_mid2 = zext i3 %p_shl1_cast_mid2_v to i6

ST_9: mul (30)  [2/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast

ST_9: tmp1 (35)  [1/1] 1.72ns  loc: src/c/hog.cpp:188
.preheader.preheader:21  %tmp1 = add i6 %i_mid2, %p_shl1_cast_mid2


 <State 10>: 4.43ns
ST_10: p_shl_cast_mid2_v (21)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:7  %p_shl_cast_mid2_v = call i6 @_ssdm_op_BitConcatenate.i6.i1.i5(i1 %tmp, i5 0)

ST_10: p_shl_cast_mid2 (22)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:8  %p_shl_cast_mid2 = zext i6 %p_shl_cast_mid2_v to i7

ST_10: mul (30)  [1/7] 2.15ns  loc: src/c/hog.cpp:186
.preheader.preheader:16  %mul = mul i65 7635497416, %zext_cast

ST_10: tmp_5 (31)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:17  %tmp_5 = call i27 @_ssdm_op_PartSelect.i27.i65.i32.i32(i65 %mul, i32 38, i32 64)

ST_10: tmp1_cast (36)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:22  %tmp1_cast = zext i6 %tmp1 to i7

ST_10: tmp_3 (37)  [1/1] 1.72ns  loc: src/c/hog.cpp:188
.preheader.preheader:23  %tmp_3 = add i7 %p_shl_cast_mid2, %tmp1_cast

ST_10: tmp_4 (38)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:24  %tmp_4 = zext i7 %tmp_3 to i64

ST_10: descriptor_V_addr (42)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:28  %descriptor_V_addr = getelementptr [72 x i15]* %descriptor_V, i64 0, i64 %tmp_4

ST_10: descriptor_V_load (43)  [2/2] 2.71ns  loc: src/c/hog.cpp:188
.preheader.preheader:29  %descriptor_V_load = load i15* %descriptor_V_addr, align 2


 <State 11>: 5.20ns
ST_11: average_cast8 (32)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:18  %average_cast8 = zext i27 %tmp_5 to i31

ST_11: average_cast7 (33)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:19  %average_cast7 = zext i27 %tmp_5 to i30

ST_11: average_cast (34)  [1/1] 0.00ns  loc: src/c/hog.cpp:186
.preheader.preheader:20  %average_cast = zext i27 %tmp_5 to i28

ST_11: op2_assign (39)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:25  %op2_assign = call i28 @_ssdm_op_BitConcatenate.i28.i27.i1(i27 %tmp_5, i1 false)

ST_11: op2_assign_cast6 (40)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:26  %op2_assign_cast6 = zext i28 %op2_assign to i31

ST_11: op2_assign_cast (41)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:27  %op2_assign_cast = zext i28 %op2_assign to i29

ST_11: descriptor_V_load (43)  [1/2] 2.71ns  loc: src/c/hog.cpp:188
.preheader.preheader:29  %descriptor_V_load = load i15* %descriptor_V_addr, align 2

ST_11: tmp_5_cast5 (44)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:30  %tmp_5_cast5 = sext i15 %descriptor_V_load to i26

ST_11: tmp_5_cast4 (45)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:31  %tmp_5_cast4 = sext i15 %descriptor_V_load to i27

ST_11: tmp_5_cast3 (46)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:32  %tmp_5_cast3 = sext i15 %descriptor_V_load to i28

ST_11: tmp_5_cast2 (47)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:33  %tmp_5_cast2 = sext i15 %descriptor_V_load to i31

ST_11: tmp_5_cast (48)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:34  %tmp_5_cast = sext i15 %descriptor_V_load to i29

ST_11: tmp_6 (49)  [1/1] 2.46ns  loc: src/c/hog.cpp:188
.preheader.preheader:35  %tmp_6 = icmp sgt i29 %tmp_5_cast, %op2_assign_cast

ST_11: StgValue_64 (50)  [1/1] 0.00ns  loc: src/c/hog.cpp:188
.preheader.preheader:36  br i1 %tmp_6, label %1, label %2

ST_11: p_shl2 (52)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:0  %p_shl2 = call i30 @_ssdm_op_BitConcatenate.i30.i27.i3(i27 %tmp_5, i3 0)

ST_11: p_shl2_cast (53)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:1  %p_shl2_cast = zext i30 %p_shl2 to i31

ST_11: tmp_7 (54)  [1/1] 2.44ns  loc: src/c/hog.cpp:191
:2  %tmp_7 = sub i31 %p_shl2_cast, %average_cast8

ST_11: tmp_s (55)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:3  %tmp_s = call i29 @_ssdm_op_PartSelect.i29.i31.i32.i32(i31 %tmp_7, i32 2, i32 30)

ST_11: tmp_18 (56)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:4  %tmp_18 = sext i29 %tmp_s to i30

ST_11: op2_assign_1_cast (57)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:5  %op2_assign_1_cast = zext i30 %tmp_18 to i31

ST_11: tmp_8 (58)  [1/1] 2.49ns  loc: src/c/hog.cpp:191
:6  %tmp_8 = icmp sgt i31 %tmp_5_cast2, %op2_assign_1_cast

ST_11: StgValue_72 (59)  [1/1] 0.00ns  loc: src/c/hog.cpp:191
:7  br i1 %tmp_8, label %3, label %4

ST_11: tmp_9 (61)  [1/1] 2.44ns  loc: src/c/hog.cpp:194
:0  %tmp_9 = sub i31 %p_shl2_cast, %op2_assign_cast6

ST_11: tmp_19 (62)  [1/1] 0.00ns  loc: src/c/hog.cpp:194
:1  %tmp_19 = call i29 @_ssdm_op_PartSelect.i29.i31.i32.i32(i31 %tmp_9, i32 2, i32 30)

ST_11: tmp_20 (63)  [1/1] 0.00ns  loc: src/c/hog.cpp:194
:2  %tmp_20 = sext i29 %tmp_19 to i30

ST_11: op2_assign_2_cast (64)  [1/1] 0.00ns  loc: src/c/hog.cpp:194
:3  %op2_assign_2_cast = zext i30 %tmp_20 to i31

ST_11: tmp_10 (65)  [1/1] 2.49ns  loc: src/c/hog.cpp:194
:4  %tmp_10 = icmp sgt i31 %tmp_5_cast2, %op2_assign_2_cast

ST_11: StgValue_78 (66)  [1/1] 0.00ns  loc: src/c/hog.cpp:194
:5  br i1 %tmp_10, label %5, label %6

ST_11: p_shl3 (68)  [1/1] 0.00ns  loc: src/c/hog.cpp:197
:0  %p_shl3 = call i29 @_ssdm_op_BitConcatenate.i29.i27.i2(i27 %tmp_5, i2 0)

ST_11: p_shl3_cast (69)  [1/1] 0.00ns  loc: src/c/hog.cpp:197
:1  %p_shl3_cast = zext i29 %p_shl3 to i30

ST_11: tmp_11 (70)  [1/1] 2.44ns  loc: src/c/hog.cpp:197
:2  %tmp_11 = add i30 %p_shl3_cast, %average_cast7

ST_11: tmp_21 (71)  [1/1] 0.00ns  loc: src/c/hog.cpp:197
:3  %tmp_21 = call i28 @_ssdm_op_PartSelect.i28.i30.i32.i32(i30 %tmp_11, i32 2, i32 29)

ST_11: op2_assign_3_cast (72)  [1/1] 0.00ns  loc: src/c/hog.cpp:197
:4  %op2_assign_3_cast = zext i28 %tmp_21 to i29

ST_11: tmp_12 (73)  [1/1] 2.46ns  loc: src/c/hog.cpp:197
:5  %tmp_12 = icmp sgt i29 %tmp_5_cast, %op2_assign_3_cast

ST_11: StgValue_85 (74)  [1/1] 0.00ns  loc: src/c/hog.cpp:197
:6  br i1 %tmp_12, label %7, label %8

ST_11: tmp_13 (76)  [1/1] 2.44ns  loc: src/c/hog.cpp:200
:0  %tmp_13 = icmp sgt i28 %tmp_5_cast3, %average_cast

ST_11: StgValue_87 (77)  [1/1] 0.00ns  loc: src/c/hog.cpp:200
:1  br i1 %tmp_13, label %9, label %10

ST_11: tmp_14 (79)  [1/1] 2.44ns  loc: src/c/hog.cpp:203
:0  %tmp_14 = sub i30 %p_shl3_cast, %average_cast7

ST_11: tmp_22 (80)  [1/1] 0.00ns  loc: src/c/hog.cpp:203
:1  %tmp_22 = call i28 @_ssdm_op_PartSelect.i28.i30.i32.i32(i30 %tmp_14, i32 2, i32 29)

ST_11: tmp_23 (81)  [1/1] 0.00ns  loc: src/c/hog.cpp:203
:2  %tmp_23 = sext i28 %tmp_22 to i30

ST_11: op2_assign_4_cast (82)  [1/1] 0.00ns  loc: src/c/hog.cpp:203
:3  %op2_assign_4_cast = zext i30 %tmp_23 to i31

ST_11: tmp_15 (83)  [1/1] 2.49ns  loc: src/c/hog.cpp:203
:4  %tmp_15 = icmp sgt i31 %tmp_5_cast2, %op2_assign_4_cast

ST_11: StgValue_93 (84)  [1/1] 0.00ns  loc: src/c/hog.cpp:203
:5  br i1 %tmp_15, label %11, label %12

ST_11: tmp_24 (86)  [1/1] 0.00ns  loc: src/c/hog.cpp:206
:0  %tmp_24 = call i26 @_ssdm_op_PartSelect.i26.i65.i32.i32(i65 %mul, i32 39, i32 64)

ST_11: op2_assign_5_cast (87)  [1/1] 0.00ns  loc: src/c/hog.cpp:206
:1  %op2_assign_5_cast = zext i26 %tmp_24 to i27

ST_11: tmp_16 (88)  [1/1] 2.43ns  loc: src/c/hog.cpp:206
:2  %tmp_16 = icmp sgt i27 %tmp_5_cast4, %op2_assign_5_cast

ST_11: StgValue_97 (89)  [1/1] 0.00ns  loc: src/c/hog.cpp:206
:3  br i1 %tmp_16, label %13, label %14

ST_11: tmp_25 (91)  [1/1] 0.00ns  loc: src/c/hog.cpp:209
:0  %tmp_25 = call i25 @_ssdm_op_PartSelect.i25.i65.i32.i32(i65 %mul, i32 40, i32 64)

ST_11: op2_assign_6_cast (92)  [1/1] 0.00ns  loc: src/c/hog.cpp:209
:1  %op2_assign_6_cast = zext i25 %tmp_25 to i26

ST_11: tmp_17 (93)  [1/1] 2.42ns  loc: src/c/hog.cpp:209
:2  %tmp_17 = icmp sgt i26 %tmp_5_cast5, %op2_assign_6_cast


 <State 12>: 3.76ns
ST_12: empty_15 (14)  [1/1] 0.00ns
.preheader.preheader:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 72, i64 72, i64 72)

ST_12: tmp_1 (25)  [1/1] 0.00ns  loc: src/c/hog.cpp:183
.preheader.preheader:11  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_12: StgValue_103 (26)  [1/1] 0.00ns  loc: src/c/hog.cpp:184
.preheader.preheader:12  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_12: normalized_V_addr_7 (94)  [1/1] 0.00ns  loc: src/c/hog.cpp:210
:3  %normalized_V_addr_7 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: storemerge_cast_cast (95)  [1/1] 1.37ns  loc: src/c/hog.cpp:210
:4  %storemerge_cast_cast = select i1 %tmp_17, i10 51, i10 0

ST_12: StgValue_106 (96)  [1/1] 2.39ns  loc: src/c/hog.cpp:210
:5  store i10 %storemerge_cast_cast, i10* %normalized_V_addr_7, align 2

ST_12: StgValue_107 (97)  [1/1] 0.00ns
:6  br label %15

ST_12: normalized_V_addr_6 (99)  [1/1] 0.00ns  loc: src/c/hog.cpp:207
:0  %normalized_V_addr_6 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_109 (100)  [1/1] 2.39ns  loc: src/c/hog.cpp:207
:1  store i10 102, i10* %normalized_V_addr_6, align 2

ST_12: StgValue_110 (101)  [1/1] 0.00ns  loc: src/c/hog.cpp:208
:2  br label %15

ST_12: StgValue_111 (103)  [1/1] 0.00ns
:0  br label %16

ST_12: normalized_V_addr_5 (105)  [1/1] 0.00ns  loc: src/c/hog.cpp:204
:0  %normalized_V_addr_5 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_113 (106)  [1/1] 2.39ns  loc: src/c/hog.cpp:204
:1  store i10 153, i10* %normalized_V_addr_5, align 2

ST_12: StgValue_114 (107)  [1/1] 0.00ns  loc: src/c/hog.cpp:205
:2  br label %16

ST_12: StgValue_115 (109)  [1/1] 0.00ns
:0  br label %17

ST_12: normalized_V_addr_4 (111)  [1/1] 0.00ns  loc: src/c/hog.cpp:201
:0  %normalized_V_addr_4 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_117 (112)  [1/1] 2.39ns  loc: src/c/hog.cpp:201
:1  store i10 204, i10* %normalized_V_addr_4, align 2

ST_12: StgValue_118 (113)  [1/1] 0.00ns  loc: src/c/hog.cpp:202
:2  br label %17

ST_12: StgValue_119 (115)  [1/1] 0.00ns
:0  br label %18

ST_12: normalized_V_addr_3 (117)  [1/1] 0.00ns  loc: src/c/hog.cpp:198
:0  %normalized_V_addr_3 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_121 (118)  [1/1] 2.39ns  loc: src/c/hog.cpp:198
:1  store i10 256, i10* %normalized_V_addr_3, align 2

ST_12: StgValue_122 (119)  [1/1] 0.00ns  loc: src/c/hog.cpp:199
:2  br label %18

ST_12: StgValue_123 (121)  [1/1] 0.00ns
:0  br label %19

ST_12: normalized_V_addr_2 (123)  [1/1] 0.00ns  loc: src/c/hog.cpp:195
:0  %normalized_V_addr_2 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_125 (124)  [1/1] 2.39ns  loc: src/c/hog.cpp:195
:1  store i10 307, i10* %normalized_V_addr_2, align 2

ST_12: StgValue_126 (125)  [1/1] 0.00ns  loc: src/c/hog.cpp:196
:2  br label %19

ST_12: StgValue_127 (127)  [1/1] 0.00ns
:0  br label %20

ST_12: normalized_V_addr_1 (129)  [1/1] 0.00ns  loc: src/c/hog.cpp:192
:0  %normalized_V_addr_1 = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_129 (130)  [1/1] 2.39ns  loc: src/c/hog.cpp:192
:1  store i10 358, i10* %normalized_V_addr_1, align 2

ST_12: StgValue_130 (131)  [1/1] 0.00ns  loc: src/c/hog.cpp:193
:2  br label %20

ST_12: StgValue_131 (133)  [1/1] 0.00ns
:0  br label %21

ST_12: normalized_V_addr (135)  [1/1] 0.00ns  loc: src/c/hog.cpp:189
:0  %normalized_V_addr = getelementptr [72 x i10]* %normalized_V, i64 0, i64 %tmp_4

ST_12: StgValue_133 (136)  [1/1] 2.39ns  loc: src/c/hog.cpp:189
:1  store i10 409, i10* %normalized_V_addr, align 2

ST_12: StgValue_134 (137)  [1/1] 0.00ns  loc: src/c/hog.cpp:190
:2  br label %21

ST_12: empty (139)  [1/1] 0.00ns  loc: src/c/hog.cpp:215
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_1)

ST_12: StgValue_136 (141)  [1/1] 0.00ns  loc: src/c/hog.cpp:183
:2  br label %.preheader


 <State 13>: 0.00ns
ST_13: StgValue_137 (143)  [1/1] 0.00ns  loc: src/c/hog.cpp:217
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6ns, clock uncertainty: 0.75ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [7]  (1.57 ns)

 <State 2>: 5.03ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/c/hog.cpp:183) [9]  (0 ns)
	'icmp' operation ('tmp_2', src/c/hog.cpp:183) [15]  (1.94 ns)
	'select' operation ('i_mid2', src/c/hog.cpp:183) [16]  (1.37 ns)
	'add' operation ('i', src/c/hog.cpp:183) [140]  (1.72 ns)

 <State 3>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('sum_addr', src/c/hog.cpp:186) [27]  (0 ns)
	'load' operation ('sum_load', src/c/hog.cpp:186) on array 'sum' [28]  (2.39 ns)

 <State 4>: 4.54ns
The critical path consists of the following:
	'load' operation ('sum_load', src/c/hog.cpp:186) on array 'sum' [28]  (2.39 ns)
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 5>: 2.15ns
The critical path consists of the following:
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 6>: 2.15ns
The critical path consists of the following:
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 7>: 2.15ns
The critical path consists of the following:
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 8>: 2.15ns
The critical path consists of the following:
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 9>: 2.15ns
The critical path consists of the following:
	'mul' operation ('mul', src/c/hog.cpp:186) [30]  (2.15 ns)

 <State 10>: 4.43ns
The critical path consists of the following:
	'add' operation ('tmp_3', src/c/hog.cpp:188) [37]  (1.72 ns)
	'getelementptr' operation ('descriptor_V_addr', src/c/hog.cpp:188) [42]  (0 ns)
	'load' operation ('descriptor_V_load', src/c/hog.cpp:188) on array 'descriptor_V' [43]  (2.71 ns)

 <State 11>: 5.2ns
The critical path consists of the following:
	'load' operation ('descriptor_V_load', src/c/hog.cpp:188) on array 'descriptor_V' [43]  (2.71 ns)
	'icmp' operation ('tmp_10', src/c/hog.cpp:194) [65]  (2.49 ns)

 <State 12>: 3.76ns
The critical path consists of the following:
	'select' operation ('storemerge_cast_cast', src/c/hog.cpp:210) [95]  (1.37 ns)
	'store' operation (src/c/hog.cpp:210) of variable 'storemerge_cast_cast', src/c/hog.cpp:210 on array 'normalized_V' [96]  (2.39 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
